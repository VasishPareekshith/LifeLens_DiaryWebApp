{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASISH1211\\\\Desktop\\\\LifeLens\\\\frontend\\\\src\\\\components\\\\AddData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport Diary from \"../assets/opendiary2.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddData = ({\n  setCurrentPage\n}) => {\n  _s();\n  const [entry, setEntry] = useState('');\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [image, setImage] = useState(null); // Handle image uploads\n  const imageInput = useRef(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const userId = localStorage.getItem('userId'); // Assuming user ID is stored in localStorage\n    const entryId = `entry-${Date.now()}`; // Generate unique entry ID\n\n    // If image exists, upload it first\n    let imageUrl = null;\n    if (image) {\n      try {\n        const formData = new FormData();\n        formData.append('image', image);\n        const uploadResponse = await axios.post('/api/diary/upload-image', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        imageUrl = uploadResponse.data.imageUrl; // Get the S3 image URL\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n\n    // Now store the diary entry (with image URL if it was uploaded)\n    try {\n      await axios.post('/api/diary/add-entry', {\n        entryId,\n        userId,\n        entryDate: selectedDate.toISOString(),\n        content: entry,\n        imageUrl // Store image URL in DynamoDB\n      });\n      console.log('Diary entry added successfully');\n      setCurrentPage('viewdata'); // Redirect to the view data page\n    } catch (error) {\n      console.error('Error adding diary entry:', error);\n    }\n  };\n  const handleImageUpload = event => {\n    setImage(event.target.files[0]); // Store the image file\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '803px',\n        height: '552.5px',\n        margin: 'auto',\n        padding: '20px',\n        backgroundImage: `url(${Diary})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Write your diary entry here...\",\n          value: entry,\n          onChange: e => setEntry(e.target.value),\n          style: {\n            height: '102%',\n            width: '100%',\n            padding: '10px',\n            border: 'none',\n            outline: 'none',\n            resize: 'none',\n            boxSizing: 'border-box',\n            backgroundColor: 'transparent',\n            fontFamily: 'Dancing Script, cursive'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: selectedDate.toISOString().substr(0, 10),\n          onChange: e => setSelectedDate(new Date(e.target.value)),\n          style: {\n            padding: '5px',\n            borderRadius: '5px',\n            border: '1px solid #ccc',\n            marginTop: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          ref: imageInput,\n          onChange: handleImageUpload,\n          style: {\n            display: 'block',\n            marginTop: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            marginTop: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              padding: '10px',\n              borderRadius: '5px',\n              border: 'none',\n              backgroundColor: '#4CAF50',\n              color: '#fff',\n              cursor: 'pointer',\n              marginRight: '10px'\n            },\n            children: \"Submit Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(AddData, \"iBxq0Jn88loUWk/KuKMIXgs0mHc=\");\n_c = AddData;\nexport default AddData;\nvar _c;\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"names":["React","useState","useRef","axios","Diary","jsxDEV","_jsxDEV","AddData","setCurrentPage","_s","entry","setEntry","selectedDate","setSelectedDate","Date","image","setImage","imageInput","handleSubmit","event","preventDefault","userId","localStorage","getItem","entryId","now","imageUrl","formData","FormData","append","uploadResponse","post","headers","data","error","console","entryDate","toISOString","content","log","handleImageUpload","target","files","style","padding","children","width","height","margin","backgroundImage","backgroundPosition","backgroundSize","onSubmit","placeholder","value","onChange","e","border","outline","resize","boxSizing","backgroundColor","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","type","substr","borderRadius","marginTop","accept","ref","display","justifyContent","color","cursor","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/VASISH1211/Desktop/LifeLens/frontend/src/components/AddData.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport Diary from \"../assets/opendiary2.png\";\r\n\r\nconst AddData = ({ setCurrentPage }) => {\r\n  const [entry, setEntry] = useState('');\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [image, setImage] = useState(null); // Handle image uploads\r\n  const imageInput = useRef(null);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const userId = localStorage.getItem('userId'); // Assuming user ID is stored in localStorage\r\n    const entryId = `entry-${Date.now()}`; // Generate unique entry ID\r\n\r\n    // If image exists, upload it first\r\n    let imageUrl = null;\r\n    if (image) {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('image', image);\r\n\r\n        const uploadResponse = await axios.post('/api/diary/upload-image', formData, {\r\n          headers: { 'Content-Type': 'multipart/form-data' }\r\n        });\r\n        imageUrl = uploadResponse.data.imageUrl; // Get the S3 image URL\r\n      } catch (error) {\r\n        console.error('Error uploading image:', error);\r\n      }\r\n    }\r\n\r\n    // Now store the diary entry (with image URL if it was uploaded)\r\n    try {\r\n      await axios.post('/api/diary/add-entry', {\r\n        entryId,\r\n        userId,\r\n        entryDate: selectedDate.toISOString(),\r\n        content: entry,\r\n        imageUrl, // Store image URL in DynamoDB\r\n      });\r\n      console.log('Diary entry added successfully');\r\n      setCurrentPage('viewdata'); // Redirect to the view data page\r\n    } catch (error) {\r\n      console.error('Error adding diary entry:', error);\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = (event) => {\r\n    setImage(event.target.files[0]); // Store the image file\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <div\r\n        style={{\r\n          width: '803px',\r\n          height: '552.5px',\r\n          margin: 'auto',\r\n          padding: '20px',\r\n          backgroundImage: `url(${Diary})`,\r\n          backgroundPosition: 'center',\r\n          backgroundSize: 'cover'\r\n        }}\r\n      >\r\n        <form onSubmit={handleSubmit}>\r\n          <textarea\r\n            placeholder=\"Write your diary entry here...\"\r\n            value={entry}\r\n            onChange={(e) => setEntry(e.target.value)}\r\n            style={{\r\n              height: '102%',\r\n              width: '100%',\r\n              padding: '10px',\r\n              border: 'none',\r\n              outline: 'none',\r\n              resize: 'none',\r\n              boxSizing: 'border-box',\r\n              backgroundColor: 'transparent',\r\n              fontFamily: 'Dancing Script, cursive'\r\n            }}\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            value={selectedDate.toISOString().substr(0, 10)}\r\n            onChange={(e) => setSelectedDate(new Date(e.target.value))}\r\n            style={{ padding: '5px', borderRadius: '5px', border: '1px solid #ccc', marginTop: '10px' }}\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            ref={imageInput}\r\n            onChange={handleImageUpload}\r\n            style={{ display: 'block', marginTop: '10px' }}\r\n          />\r\n          <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n            <button\r\n              type=\"submit\"\r\n              style={{\r\n                padding: '10px',\r\n                borderRadius: '5px',\r\n                border: 'none',\r\n                backgroundColor: '#4CAF50',\r\n                color: '#fff',\r\n                cursor: 'pointer',\r\n                marginRight: '10px'\r\n              }}\r\n            >\r\n              Submit Data\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
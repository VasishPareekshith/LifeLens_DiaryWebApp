{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASISH1211\\\\Desktop\\\\LifeLens\\\\frontend\\\\src\\\\components\\\\AddData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport \"./AddDataPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddDataPage = () => {\n  _s();\n  const {\n    date\n  } = useParams(); // Get selected date from URL\n  const [text, setText] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const navigate = useNavigate();\n  const handleImageChange = e => {\n    const files = Array.from(e.target.files);\n    setImages(files.map(file => URL.createObjectURL(file)));\n  };\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n  const handleSubmit = () => {\n    const data = {\n      date,\n      text,\n      images\n    };\n    // You would typically save the data to the state or a backend here\n    console.log(data);\n    navigate(\"/\"); // Go back to the calendar after saving\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-data-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Diary Entry for \", date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diary-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Write your thoughts here...\",\n        value: text,\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        multiple: true,\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: `Upload ${index}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Save Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(AddDataPage, \"kwgi3/n61UhyNnICPMsunAs/g9c=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = AddDataPage;\nexport default AddDataPage;\nvar _c;\n$RefreshReg$(_c, \"AddDataPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","jsxDEV","_jsxDEV","AddDataPage","_s","date","text","setText","images","setImages","navigate","handleImageChange","e","files","Array","from","target","map","file","URL","createObjectURL","handleTextChange","value","handleSubmit","data","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","type","accept","multiple","image","index","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/VASISH1211/Desktop/LifeLens/frontend/src/components/AddData.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport \"./AddDataPage.css\";\r\n\r\nconst AddDataPage = () => {\r\n    const { date } = useParams();  // Get selected date from URL\r\n    const [text, setText] = useState(\"\");\r\n    const [images, setImages] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const handleImageChange = (e) => {\r\n        const files = Array.from(e.target.files);\r\n        setImages(files.map((file) => URL.createObjectURL(file)));\r\n    };\r\n\r\n    const handleTextChange = (e) => {\r\n        setText(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const data = {\r\n            date,\r\n            text,\r\n            images,\r\n        };\r\n        // You would typically save the data to the state or a backend here\r\n        console.log(data);\r\n        navigate(\"/\");  // Go back to the calendar after saving\r\n    };\r\n\r\n    return (\r\n        <div className=\"add-data-page\">\r\n            <h1>Diary Entry for {date}</h1>\r\n            <div className=\"diary-container\">\r\n                <textarea\r\n                    placeholder=\"Write your thoughts here...\"\r\n                    value={text}\r\n                    onChange={handleTextChange}\r\n                />\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    multiple\r\n                    onChange={handleImageChange}\r\n                />\r\n                <div className=\"image-preview\">\r\n                    {images.map((image, index) => (\r\n                        <img key={index} src={image} alt={`Upload ${index}`} />\r\n                    ))}\r\n                </div>\r\n                <button onClick={handleSubmit}>Save Entry</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddDataPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
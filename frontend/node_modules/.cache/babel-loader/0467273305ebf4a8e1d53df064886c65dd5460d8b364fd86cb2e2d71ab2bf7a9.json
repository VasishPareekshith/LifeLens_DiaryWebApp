{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASISH1211\\\\Desktop\\\\LifeLens\\\\frontend\\\\src\\\\components\\\\CalendarView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./CalendarView.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarView = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [eventName, setEventName] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [image, setImage] = useState(null); // To store the uploaded image\n  const [text, setText] = useState(\"\"); // To store the uploaded text\n  const [uploads, setUploads] = useState({}); // Store uploads keyed by date\n\n  const Date_Click_Fun = date => {\n    setSelectedDate(date);\n  };\n  const handleImageChange = e => {\n    setImage(URL.createObjectURL(e.target.files[0]));\n  };\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n  const handleUpload = () => {\n    // Save the uploaded image and text for the selected date\n    if (selectedDate) {\n      setUploads(prevUploads => ({\n        ...prevUploads,\n        [selectedDate.toDateString()]: {\n          image: image,\n          text: text\n        }\n      }));\n      // Clear inputs after uploading\n      setImage(null);\n      setText(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Timeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-container\",\n        children: /*#__PURE__*/_jsxDEV(Calendar, {\n          value: selectedDate,\n          onClickDay: Date_Click_Fun,\n          tileClassName: ({\n            date\n          }) => selectedDate && date.toDateString() === selectedDate.toDateString() ? \"selected\" : events.some(event => event.date.toDateString() === date.toDateString()) ? \"event-marked\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), selectedDate && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Upload for \", selectedDate.toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter text\",\n          value: text,\n          onChange: handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), selectedDate && uploads[selectedDate.toDateString()] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Content for \", selectedDate.toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), uploads[selectedDate.toDateString()].image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploads[selectedDate.toDateString()].image,\n          alt: \"Uploaded\",\n          style: {\n            width: \"300px\",\n            height: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this), uploads[selectedDate.toDateString()].text && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: uploads[selectedDate.toDateString()].text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(CalendarView, \"zqzngC7XBXBVB//Q1L+kGrt3kZE=\");\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","CalendarView","_s","selectedDate","setSelectedDate","eventName","setEventName","events","setEvents","image","setImage","text","setText","uploads","setUploads","Date_Click_Fun","date","handleImageChange","e","URL","createObjectURL","target","files","handleTextChange","value","handleUpload","prevUploads","toDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClickDay","tileClassName","some","event","type","accept","onChange","placeholder","onClick","src","alt","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/VASISH1211/Desktop/LifeLens/frontend/src/components/CalendarView.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./CalendarView.css\";\r\n\r\nconst CalendarView = () => {\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const [eventName, setEventName] = useState(\"\");\r\n    const [events, setEvents] = useState([]);\r\n    const [image, setImage] = useState(null);  // To store the uploaded image\r\n    const [text, setText] = useState(\"\");      // To store the uploaded text\r\n    const [uploads, setUploads] = useState({}); // Store uploads keyed by date\r\n\r\n    const Date_Click_Fun = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        setImage(URL.createObjectURL(e.target.files[0]));\r\n    };\r\n\r\n    const handleTextChange = (e) => {\r\n        setText(e.target.value);\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        // Save the uploaded image and text for the selected date\r\n        if (selectedDate) {\r\n            setUploads((prevUploads) => ({\r\n                ...prevUploads,\r\n                [selectedDate.toDateString()]: {\r\n                    image: image,\r\n                    text: text,\r\n                }\r\n            }));\r\n            // Clear inputs after uploading\r\n            setImage(null);\r\n            setText(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <h1>Your Timeline</h1>\r\n            <div className=\"container\">\r\n                <div className=\"calendar-container\">\r\n                    <Calendar \r\n                        value={selectedDate}\r\n                        onClickDay={Date_Click_Fun}\r\n                        tileClassName={({ date }) =>\r\n                            selectedDate &&\r\n                            date.toDateString() === selectedDate.toDateString()\r\n                                ? \"selected\"\r\n                                : events.some(\r\n                                      (event) =>\r\n                                          event.date.toDateString() ===\r\n                                          date.toDateString(),\r\n                                  )\r\n                                ? \"event-marked\"\r\n                                : \"\"\r\n                        }\r\n                    />\r\n                </div>\r\n\r\n                {selectedDate && (\r\n                    <div className=\"upload-section\">\r\n                        <h3>Upload for {selectedDate.toDateString()}</h3>\r\n                        <input \r\n                            type=\"file\" \r\n                            accept=\"image/*\" \r\n                            onChange={handleImageChange}\r\n                        />\r\n                        <textarea \r\n                            placeholder=\"Enter text\"\r\n                            value={text}\r\n                            onChange={handleTextChange}\r\n                        />\r\n                        <button onClick={handleUpload}>Upload</button>\r\n                    </div>\r\n                )}\r\n\r\n                {selectedDate && uploads[selectedDate.toDateString()] && (\r\n                    <div className=\"uploaded-content\">\r\n                        <h3>Content for {selectedDate.toDateString()}</h3>\r\n                        {uploads[selectedDate.toDateString()].image && (\r\n                            <img \r\n                                src={uploads[selectedDate.toDateString()].image}\r\n                                alt=\"Uploaded\"\r\n                                style={{ width: \"300px\", height: \"auto\" }}\r\n                            />\r\n                        )}\r\n                        {uploads[selectedDate.toDateString()].text && (\r\n                            <p>{uploads[selectedDate.toDateString()].text}</p>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
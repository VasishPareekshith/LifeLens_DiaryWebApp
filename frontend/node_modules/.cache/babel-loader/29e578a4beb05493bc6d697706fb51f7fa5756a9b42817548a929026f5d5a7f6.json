{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASISH1211\\\\Desktop\\\\LifeLens\\\\frontend\\\\src\\\\components\\\\CalendarPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date()); // Current displayed month\n  const [selectedDate, setSelectedDate] = useState(null); // Selected date by user\n\n  // Helper function to get days in a month\n  const getDaysInMonth = (month, year) => {\n    return new Date(year, month + 1, 0).getDate();\n  };\n\n  // Helper function to get the first day of the month (0 = Sunday, 1 = Monday, etc.)\n  const getFirstDayOfMonth = (month, year) => {\n    return new Date(year, month, 1).getDay();\n  };\n\n  // Handle changing the month (Next/Previous)\n  const changeMonth = direction => {\n    let newDate = new Date(currentDate);\n    newDate.setMonth(currentDate.getMonth() + direction);\n    setCurrentDate(newDate);\n  };\n\n  // Handle day click\n  const handleDayClick = day => {\n    setSelectedDate(new Date(currentDate.getFullYear(), currentDate.getMonth(), day));\n  };\n\n  // Get month and year to display\n  const month = currentDate.getMonth();\n  const year = currentDate.getFullYear();\n\n  // Get total days in current month\n  const daysInMonth = getDaysInMonth(month, year);\n\n  // Get the first day of the current month\n  const firstDayOfMonth = getFirstDayOfMonth(month, year);\n\n  // Create an array of days for the current month\n  const daysArray = Array.from({\n    length: daysInMonth\n  }, (_, i) => i + 1);\n\n  // Month names\n  const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeMonth(-1),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [monthNames[month], \", \", year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeMonth(1),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar__picture\",\n      children: selectedDate ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [selectedDate.getDate(), \", \", selectedDate.toLocaleString('default', {\n            weekday: 'long'\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: monthNames[selectedDate.getMonth()]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [currentDate.getDate(), \", \", currentDate.toLocaleString('default', {\n            weekday: 'long'\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: monthNames[month]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar__date\",\n      children: [['S', 'M', 'T', 'W', 'T', 'F', 'S'].map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar__day\",\n        children: day\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)), Array(firstDayOfMonth).fill(null).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar__number\"\n      }, `empty-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)), daysArray.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `calendar__number ${selectedDate && selectedDate.getDate() === day ? 'calendar__number--current' : ''}`,\n        onClick: () => handleDayClick(day),\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"vPYWgPxXiYe5mbjWAYj4vGXh074=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Calendar","_s","currentDate","setCurrentDate","Date","selectedDate","setSelectedDate","getDaysInMonth","month","year","getDate","getFirstDayOfMonth","getDay","changeMonth","direction","newDate","setMonth","getMonth","handleDayClick","day","getFullYear","daysInMonth","firstDayOfMonth","daysArray","Array","from","length","_","i","monthNames","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","weekday","map","index","fill","_c","$RefreshReg$"],"sources":["C:/Users/VASISH1211/Desktop/LifeLens/frontend/src/components/CalendarPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Calendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date()); // Current displayed month\r\n  const [selectedDate, setSelectedDate] = useState(null); // Selected date by user\r\n\r\n  // Helper function to get days in a month\r\n  const getDaysInMonth = (month, year) => {\r\n    return new Date(year, month + 1, 0).getDate();\r\n  };\r\n\r\n  // Helper function to get the first day of the month (0 = Sunday, 1 = Monday, etc.)\r\n  const getFirstDayOfMonth = (month, year) => {\r\n    return new Date(year, month, 1).getDay();\r\n  };\r\n\r\n  // Handle changing the month (Next/Previous)\r\n  const changeMonth = (direction) => {\r\n    let newDate = new Date(currentDate);\r\n    newDate.setMonth(currentDate.getMonth() + direction);\r\n    setCurrentDate(newDate);\r\n  };\r\n\r\n  // Handle day click\r\n  const handleDayClick = (day) => {\r\n    setSelectedDate(new Date(currentDate.getFullYear(), currentDate.getMonth(), day));\r\n  };\r\n\r\n  // Get month and year to display\r\n  const month = currentDate.getMonth();\r\n  const year = currentDate.getFullYear();\r\n\r\n  // Get total days in current month\r\n  const daysInMonth = getDaysInMonth(month, year);\r\n\r\n  // Get the first day of the current month\r\n  const firstDayOfMonth = getFirstDayOfMonth(month, year);\r\n\r\n  // Create an array of days for the current month\r\n  const daysArray = Array.from({ length: daysInMonth }, (_, i) => i + 1);\r\n\r\n  // Month names\r\n  const monthNames = [\r\n    'January', 'February', 'March', 'April', 'May', 'June',\r\n    'July', 'August', 'September', 'October', 'November', 'December'\r\n  ];\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      {/* Month and Year Display */}\r\n      <div className=\"calendar__header\">\r\n        <button onClick={() => changeMonth(-1)}>&lt;</button>\r\n        <h2>{monthNames[month]}, {year}</h2>\r\n        <button onClick={() => changeMonth(1)}>&gt;</button>\r\n      </div>\r\n\r\n      <div className=\"calendar__picture\">\r\n        {selectedDate ? (\r\n          <>\r\n            <h2>{selectedDate.getDate()}, {selectedDate.toLocaleString('default', { weekday: 'long' })}</h2>\r\n            <h3>{monthNames[selectedDate.getMonth()]}</h3>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h2>{currentDate.getDate()}, {currentDate.toLocaleString('default', { weekday: 'long' })}</h2>\r\n            <h3>{monthNames[month]}</h3>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      {/* Days of the week */}\r\n      <div className=\"calendar__date\">\r\n        {['S', 'M', 'T', 'W', 'T', 'F', 'S'].map((day, index) => (\r\n          <div key={index} className=\"calendar__day\">{day}</div>\r\n        ))}\r\n\r\n        {/* Empty slots for days before the first day */}\r\n        {Array(firstDayOfMonth).fill(null).map((_, index) => (\r\n          <div key={`empty-${index}`} className=\"calendar__number\"></div>\r\n        ))}\r\n\r\n        {/* Display the days of the month */}\r\n        {daysArray.map((day) => (\r\n          <div\r\n            key={day}\r\n            className={`calendar__number ${selectedDate && selectedDate.getDate() === day ? 'calendar__number--current' : ''}`}\r\n            onClick={() => handleDayClick(day)}\r\n          >\r\n            {day}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
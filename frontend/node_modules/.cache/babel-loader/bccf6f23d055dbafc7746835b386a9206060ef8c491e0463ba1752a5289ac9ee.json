{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import axios from'axios';// import Diary from \"../assets/opendiary2.png\";\n// import POSITIVEIMG from '../assets/POSITIVE.png'; \n// import NEGATIVEIMG from '../assets/NEGATIVE.png'; \n// import MIXEDIMG from '../assets/MIXED.png';\n// import NEUTRALIMG from '../assets/NEUTRAL.png'; \n// import save from '../assets/save.png';\n// import imgup from '../assets/imgup.png';\n// import mic from '../assets/mic.png';\n// import translate from '../assets/translate.png';\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddData=_ref=>{let{setCurrentPage}=_ref;const[selectedDate,setSelectedDate]=useState(new Date());// Initialize with current date\nconst[textValue,setTextValue]=useState(new Date().toLocaleDateString(undefined,{day:'2-digit',month:'short',year:'numeric'}));const[image,setImage]=useState(null);// State to hold a single uploaded image\nconst[sentimentImage,setSentimentImage]=useState(null);const[reply,setReply]=useState('');const[entry,setEntry]=useState('');// State to hold the diary text\nconst[existingEntry,setExistingEntry]=useState(null);// State to hold the existing entry (if any)\nconst imageInput=useRef(null);const email=localStorage.getItem('email');// Assuming email is stored in localStorage\nconst[showSubmit,setShowSubmit]=useState(false);const[showTranslate,setShowTranslate]=useState(false);const[showMic,setShowMic]=useState(false);// eslint-disable-next-line no-unused-vars\nconst[audioFile,setAudioFile]=useState(null);// eslint-disable-next-line no-unused-vars\nconst[errorMessage,setErrorMessage]=useState('');const[recording,setRecording]=useState(false);const[timer,setTimer]=useState(0);const formatTime=timeInSeconds=>{const minutes=Math.floor(timeInSeconds/60);const seconds=timeInSeconds%60;return\"\".concat(String(minutes).padStart(2,'0'),\":\").concat(String(seconds).padStart(2,'0'));};const handleTranslate=async()=>{try{const response=await axios.post(\"http://localhost:5000/api/translate\",{text:entry});setEntry(response.data.translatedText);}catch(error){console.error(\"Translation error:\",error);}};const[mediaRecorder,setMediaRecorder]=useState(null);// Store MediaRecorder instance\nconst handleToggleRecording=async()=>{if(recording){// Stop recording\nmediaRecorder.stop();setRecording(false);}else{// Start recording\nconst stream=await navigator.mediaDevices.getUserMedia({audio:true});const newMediaRecorder=new MediaRecorder(stream);const audioChunks=[];newMediaRecorder.ondataavailable=event=>{audioChunks.push(event.data);};newMediaRecorder.onstop=async()=>{const audioBlob=new Blob(audioChunks,{type:'audio/m4a'});const file=new File([audioBlob],'recording.m4a',{type:'audio/m4a'});setAudioFile(file);await uploadAudio(file);};newMediaRecorder.start();setMediaRecorder(newMediaRecorder);// Store the MediaRecorder instance\nsetRecording(true);}};useEffect(()=>{let intervalId;if(recording){intervalId=setInterval(()=>{setTimer(prevTime=>prevTime+1);},1000);}else{clearInterval(intervalId);setTimer(0);// Reset the timer when stopping\n}return()=>clearInterval(intervalId);},[recording]);const uploadAudio=async file=>{const formData=new FormData();formData.append('audio',file);try{const response=await axios.post('http://localhost:5000/upload',formData,{headers:{'Content-Type':'multipart/form-data'}});await checkTranscriptionStatus(response.data.jobName);}catch(error){console.error('Error uploading audio:',error);setErrorMessage('Failed to upload audio. Please try again.');}};const checkTranscriptionStatus=async jobName=>{const interval=setInterval(async()=>{try{const response=await axios.get(\"http://localhost:5000/transcription-status/\".concat(jobName));const{TranscriptionJob}=response.data;if(TranscriptionJob.TranscriptionJobStatus==='COMPLETED'){clearInterval(interval);const transcriptUri=TranscriptionJob.Transcript.TranscriptFileUri;await fetchTranscriptionText(transcriptUri);// Fetch the transcription text\n}else if(TranscriptionJob.TranscriptionJobStatus==='FAILED'){clearInterval(interval);setErrorMessage('Transcription job failed.');console.error('Transcription job failed');}}catch(error){console.error('Error checking transcription status:',error);setErrorMessage('Error checking transcription status. Please try again.');clearInterval(interval);}},5000);// Check status every 5 seconds\n};const fetchTranscriptionText=async transcriptUri=>{try{const transcriptResponse=await axios.get(transcriptUri);const text=transcriptResponse.data.results.transcripts[0].transcript;setEntry(text);}catch(error){console.error('Error fetching transcription text:',error);setErrorMessage('Error fetching transcription text. Please try again.');}};//==================================================================\n// Fetch existing entry when date changes\nconst fetchExistingEntry=async entryDate=>{try{const response=await axios.get('http://localhost:5000/api/diary/get-entry',{params:{entryDate,email}});const{content,imageUrl}=response.data;// Populate the form with the existing data\nsetEntry(content||'');setImage(imageUrl?await fetchImageFromUrl(imageUrl):null);setExistingEntry(response.data);// Store the fetched entry\n}catch(error){console.log('No entry found for this date');setEntry('');// Clear the entry field if no entry exists\nsetImage(null);// Clear the image if no entry exists\n}};// Helper to fetch image blob from the URL\nconst fetchImageFromUrl=async url=>{const response=await fetch(url);const blob=await response.blob();return new File([blob],\"existingImage\",{type:blob.type});};// Call fetchExistingEntry when the date changes\nuseEffect(()=>{const dateString=selectedDate.toISOString().substr(0,10);// Format the date as YYYY-MM-DD\nfetchExistingEntry(dateString);// eslint-disable-next-line\n},[selectedDate]);// Handle text area input change\nconst handleDataChange=event=>{setEntry(event.target.value);// Update entry state\n};// Handle date change\nconst handleDateChange=event=>{const newDate=new Date(event.target.value);setSelectedDate(newDate);setTextValue(newDate.toLocaleDateString(undefined,{day:'2-digit',month:'short',year:'numeric'}));};const[imageVisible,setImageVisible]=useState(false);// State for controlling image visibility\nuseEffect(()=>{// If sentimentImage is set, start a timer to hide it after 10 seconds\nif(imageVisible){const timer=setTimeout(()=>{setSentimentImage(null);// Hide the sentiment image after 10 seconds\nsetImageVisible(false);// Hide the image\n},10000);// 10 seconds delay\n// Cleanup function to clear the timeout if the component is unmounted or image is reset earlier\nreturn()=>clearTimeout(timer);}},[imageVisible]);// Run when imageVisible changes\n// Handle form submission\nconst handleSubmit=async event=>{event.preventDefault();const entryId=\"entry-\".concat(Date.now());// Generate unique entry ID\nlet imageUrl=null;if(image){try{const formData=new FormData();formData.append('image',image);const uploadResponse=await axios.post('http://localhost:5000/api/diary/upload-image',formData,{headers:{'Content-Type':'multipart/form-data'}});imageUrl=uploadResponse.data.imageUrl;}catch(error){console.error('Error uploading image:',error);}}// Store or update the diary entry (with image URL if it was uploaded)\ntry{await axios.post('http://localhost:5000/api/diary/add-entry',{entryId:existingEntry?existingEntry.entryId:entryId,// Use existing entryId if updating\nemail,entryDate:selectedDate.toISOString().substr(0,10),content:entry,imageUrl// Store image URL in DynamoDB\n});console.log('Diary entry added/updated successfully');// Fetch sentiment after adding/updating the entry using the new endpoint\nconst sentimentResponse=await axios.get('http://localhost:5000/api/diary/get-sentiment-by-email-and-date',{params:{entryDate:selectedDate.toISOString().substr(0,10),// Use the same date\nemail}});if(entry.length<20){setReply(\"You could always say more\");setSentimentImage('https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/NEUTRALIMG.png');// Set neutral sentiment image\nreturn;// Exit early since we don't need to fetch sentiment\n}if(sentimentResponse.status===200){const{randomReply,sentiment}=sentimentResponse.data;setReply(randomReply);if(sentiment==='POSITIVE'){setSentimentImage('https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/POSITIVE.png');}else if(sentiment==='NEGATIVE'){setSentimentImage('https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/NEGATIVE.png');}else if(sentiment==='MIXED'){setSentimentImage('https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/MIXED.png');}else{setSentimentImage('https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/NEUTRAL.png');}}setImageVisible(true);}catch(error){console.error('Error adding/updating diary entry:',error);}};// Handle image upload\nconst handleImageUpload=event=>{const file=event.target.files[0];// Store only the first uploaded image file\nif(file){setImage(file);// Update image state with the file\n}};const triggerFileInput=()=>{imageInput.current.click();// Trigger file input click when the div is clicked\n};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',paddingTop:'100px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'93%',height:'60px',display:'flex',marginLeft:'50px',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsxs(\"div\",{style:{cursor:'pointer',width:'360px',height:'50px',display:'flex',alignItems:'center',justifyContent:'center',gap:'1rem',fontSize:'1.125em',fontWeight:700,letterSpacing:'2px',color:'black',backgroundColor:'#644dff',border:'2px solid #4836bb',borderRadius:'0.75rem',boxShadow:'0 8px 0 #4836bb',transition:'all 0.1s ease',filter:'drop-shadow(0 15px 20px rgba(101, 77, 255, 0.39))',marginTop:'-30px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{color:'white',marginRight:'10px'},children:\"Select Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:selectedDate.toISOString().substr(0,10),onChange:handleDateChange,style:{backgroundColor:'#644dff',borderRadius:'10px',color:'white',fontWeight:'700',height:'40px',width:'150px',paddingLeft:'10px',paddingRight:'10px',fontSize:19}})]})}),/*#__PURE__*/_jsx(\"div\",{style:{width:'803px',height:'552.5px',margin:'auto',padding:'20px',backgroundImage:\"url(https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/opendiary2.png)\",backgroundPosition:'center',backgroundSize:'cover'},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{width:'44%',height:'510px',marginLeft:'50px',backgroundColor:'transparent',padding:'10px',overflow:'hidden',display:'flex',// Added to enable flexbox centering\nalignItems:'center',// Vertically center the image\njustifyContent:'center'// Horizontally center the image\n},onClick:triggerFileInput// Trigger file input on click\n,children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"image/*\",ref:imageInput,onChange:handleImageUpload,style:{display:'none'}// Hide file input\n}),image?/*#__PURE__*/_jsx(\"img\",{src:URL.createObjectURL(image)// Generate a URL for the selected image\n,alt:\"Uploaded\",style:{maxWidth:'100%',maxHeight:'100%',marginBottom:'10px'}// Show the selected image\n}):/*#__PURE__*/ // <p style={{ color: 'grey' }}>Click to upload image</p>\n_jsx(\"img\",{src:\"https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/imgup.png\",alt:\"imgup\",style:{width:'50px',height:'50px',cursor:'pointer'}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{width:'47%',height:'490px',marginTop:'5px',marginRight:'5px',backgroundColor:'transparent',padding:'10px',position:'relative'},children:[/*#__PURE__*/_jsx(\"span\",{style:{marginRight:'10px',color:'black',fontWeight:600},children:textValue}),/*#__PURE__*/_jsx(\"textarea\",{style:{height:'100%',width:'100%',padding:'10px',border:'none',outline:'none',resize:'none',boxSizing:'border-box',backgroundColor:'transparent',fontFamily:'Dancing Script, cursive',overflow:'hidden'},value:entry,onChange:handleDataChange,spellCheck:\"false\"}),/*#__PURE__*/_jsx(\"img\",{src:\"https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/save.png\",alt:\"save\",style:{width:'30px',height:'30px',position:'absolute',bottom:'0',// Position at the bottom\nright:'70px',// Position at the right\ncursor:'pointer'},onClick:handleSubmit// Trigger save action on click\n,onMouseEnter:()=>setShowSubmit(true),onMouseLeave:()=>setShowSubmit(false)}),showSubmit&&/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',bottom:'35px',// Adjust to position above the icon\nright:'60px',backgroundColor:'#333',color:'#fff',padding:'5px 8px',borderRadius:'4px',fontSize:'12px',whiteSpace:'nowrap'// Prevent text from wrapping\n},children:\"Submit\"}),/*#__PURE__*/_jsx(\"img\",{src:\"https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/translate.png\",alt:\"translate\",style:{width:'35px',height:'35px',position:'absolute',bottom:'-1px',// Position at the bottom\nright:'160px',// Position at the right\ncursor:'pointer'},onClick:handleTranslate,onMouseEnter:()=>setShowTranslate(true),onMouseLeave:()=>setShowTranslate(false)}),showTranslate&&/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',bottom:'35px',// Adjust to position above the icon\nright:'150px',backgroundColor:'#333',color:'#fff',padding:'5px 8px',borderRadius:'4px',fontSize:'12px',whiteSpace:'nowrap'// Prevent text from wrapping\n},children:\"Translate\"}),/*#__PURE__*/_jsx(\"img\",{src:\"https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/mic.png\",alt:\"mic\",style:{width:'30px',height:'30px',position:'absolute',bottom:'0',// Position at the bottom\nright:'250px',// Position at the right\ncursor:'pointer',backgroundColor:recording?'red':'transparent',borderRadius:'10px'},onClick:handleToggleRecording,onMouseEnter:()=>setShowMic(true),onMouseLeave:()=>setShowMic(false)}),recording&&/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'24px',fontWeight:'bold',width:'30px',height:'30px',position:'absolute',bottom:'15px',// Position at the bottom\nright:'270px'},children:formatTime(timer)}),showMic&&/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',bottom:'35px',// Adjust to position above the icon\nright:'215px',backgroundColor:'#333',color:'#fff',padding:'5px 8px',borderRadius:'4px',fontSize:'12px',whiteSpace:'nowrap'// Prevent text from wrapping\n},children:recording?'Stop Recording':'Start Recording'})]})]})}),sentimentImage&&imageVisible&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',// Change to fixed\nbottom:'0px',// Distance from the bottom\nleft:'0px',// Distance from the left\nzIndex:100// Ensure it's above other components\n},children:/*#__PURE__*/_jsx(\"img\",{src:sentimentImage,alt:\"Sentiment\",style:{width:'100%',height:'100%',objectFit:'cover'}// Adjust size as needed\n})}),sentimentImage&&imageVisible&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',bottom:'10px',// Distance from the bottom\nleft:'200px',// Distance from the left\nzIndex:101// Ensure it's above other components\n},children:/*#__PURE__*/_jsxs(\"div\",{style:{width:'200px',// Adjust width as needed\nheight:'100px',// Adjust height as needed\npadding:'10px',// Padding for text area\nborderRadius:'5px',// Rounded corners\nborder:'1px solid #ccc',// Border style\nbackgroundColor:'rgba(255, 255, 255, 0.8)',// Slightly transparent background\nfontSize:'16px',// Font size\noverflowY:'auto'// Allow scrolling if content overflows\n},children:[reply,\" \"]})})]});};export default AddData;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsx","_jsx","jsxs","_jsxs","AddData","_ref","setCurrentPage","selectedDate","setSelectedDate","Date","textValue","setTextValue","toLocaleDateString","undefined","day","month","year","image","setImage","sentimentImage","setSentimentImage","reply","setReply","entry","setEntry","existingEntry","setExistingEntry","imageInput","email","localStorage","getItem","showSubmit","setShowSubmit","showTranslate","setShowTranslate","showMic","setShowMic","audioFile","setAudioFile","errorMessage","setErrorMessage","recording","setRecording","timer","setTimer","formatTime","timeInSeconds","minutes","Math","floor","seconds","concat","String","padStart","handleTranslate","response","post","text","data","translatedText","error","console","mediaRecorder","setMediaRecorder","handleToggleRecording","stop","stream","navigator","mediaDevices","getUserMedia","audio","newMediaRecorder","MediaRecorder","audioChunks","ondataavailable","event","push","onstop","audioBlob","Blob","type","file","File","uploadAudio","start","intervalId","setInterval","prevTime","clearInterval","formData","FormData","append","headers","checkTranscriptionStatus","jobName","interval","get","TranscriptionJob","TranscriptionJobStatus","transcriptUri","Transcript","TranscriptFileUri","fetchTranscriptionText","transcriptResponse","results","transcripts","transcript","fetchExistingEntry","entryDate","params","content","imageUrl","fetchImageFromUrl","log","url","fetch","blob","dateString","toISOString","substr","handleDataChange","target","value","handleDateChange","newDate","imageVisible","setImageVisible","setTimeout","clearTimeout","handleSubmit","preventDefault","entryId","now","uploadResponse","sentimentResponse","length","status","randomReply","sentiment","handleImageUpload","files","triggerFileInput","current","click","style","padding","paddingTop","children","width","height","display","marginLeft","justifyContent","alignItems","cursor","gap","fontSize","fontWeight","letterSpacing","color","backgroundColor","border","borderRadius","boxShadow","transition","filter","marginTop","marginRight","onChange","paddingLeft","paddingRight","margin","backgroundImage","backgroundPosition","backgroundSize","overflow","onClick","accept","ref","src","URL","createObjectURL","alt","maxWidth","maxHeight","marginBottom","position","outline","resize","boxSizing","fontFamily","spellCheck","bottom","right","onMouseEnter","onMouseLeave","whiteSpace","left","zIndex","objectFit","overflowY"],"sources":["C:/Users/VASISH1211/Desktop/PROJ/LifeLens/frontend/src/components/AddData.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n// import Diary from \"../assets/opendiary2.png\";\n// import POSITIVEIMG from '../assets/POSITIVE.png'; \n// import NEGATIVEIMG from '../assets/NEGATIVE.png'; \n// import MIXEDIMG from '../assets/MIXED.png';\n// import NEUTRALIMG from '../assets/NEUTRAL.png'; \n// import save from '../assets/save.png';\n// import imgup from '../assets/imgup.png';\n// import mic from '../assets/mic.png';\n// import translate from '../assets/translate.png';\n\nconst AddData = ({ setCurrentPage }) => {\n    const [selectedDate, setSelectedDate] = useState(new Date()); // Initialize with current date\n    const [textValue, setTextValue] = useState(new Date().toLocaleDateString(undefined, {\n        day: '2-digit',\n        month: 'short',\n        year: 'numeric'\n    }));\n    const [image, setImage] = useState(null); // State to hold a single uploaded image\n    const [sentimentImage, setSentimentImage] = useState(null);\n    const [reply, setReply] = useState('');\n    const [entry, setEntry] = useState(''); // State to hold the diary text\n    const [existingEntry, setExistingEntry] = useState(null); // State to hold the existing entry (if any)\n    const imageInput = useRef(null);\n    const email = localStorage.getItem('email'); // Assuming email is stored in localStorage\n    const [showSubmit, setShowSubmit] = useState(false);\n    const [showTranslate, setShowTranslate] = useState(false);\n    const [showMic, setShowMic] = useState(false); // eslint-disable-next-line no-unused-vars\n    const [audioFile, setAudioFile] = useState(null);// eslint-disable-next-line no-unused-vars\n    const [errorMessage, setErrorMessage] = useState('');\n    const [recording, setRecording] = useState(false);\n    const [timer, setTimer] = useState(0);\n    \n    const formatTime = (timeInSeconds) => {\n        const minutes = Math.floor(timeInSeconds / 60);\n        const seconds = timeInSeconds % 60;\n        return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n    };\n\n    const handleTranslate = async () => {\n        try {\n        const response = await axios.post(\"http://localhost:5000/api/translate\", { text: entry });\n        setEntry(response.data.translatedText);\n        } catch (error) {\n        console.error(\"Translation error:\", error);\n        }\n    }\n    const [mediaRecorder, setMediaRecorder] = useState(null); // Store MediaRecorder instance\n\n    const handleToggleRecording = async () => {\n        if (recording) {\n            // Stop recording\n            mediaRecorder.stop();\n            setRecording(false);\n        } else {\n            // Start recording\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            const newMediaRecorder = new MediaRecorder(stream);\n            const audioChunks = [];\n\n            newMediaRecorder.ondataavailable = (event) => {\n                audioChunks.push(event.data);\n            };\n\n            newMediaRecorder.onstop = async () => {\n                const audioBlob = new Blob(audioChunks, { type: 'audio/m4a' });\n                const file = new File([audioBlob], 'recording.m4a', { type: 'audio/m4a' });\n                setAudioFile(file);\n                await uploadAudio(file);\n            };\n\n            newMediaRecorder.start();\n            setMediaRecorder(newMediaRecorder); // Store the MediaRecorder instance\n            setRecording(true);\n        }\n    };\n\n    useEffect(() => {\n        let intervalId;\n        if (recording) {\n            intervalId = setInterval(() => {\n              setTimer((prevTime) => prevTime + 1);\n            }, 1000);\n        }   else {\n            clearInterval(intervalId);\n            setTimer(0); // Reset the timer when stopping\n          }\n          return () => clearInterval(intervalId);\n        }, [recording]);\n\n    const uploadAudio = async (file) => {\n        const formData = new FormData();\n        formData.append('audio', file);\n        \n        try {\n            const response = await axios.post('http://localhost:5000/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n            await checkTranscriptionStatus(response.data.jobName);\n        } catch (error) {\n            console.error('Error uploading audio:', error);\n            setErrorMessage('Failed to upload audio. Please try again.');\n        }\n    };\n\n    const checkTranscriptionStatus = async (jobName) => {\n        const interval = setInterval(async () => {\n            try {\n                const response = await axios.get(`http://localhost:5000/transcription-status/${jobName}`);\n                const { TranscriptionJob } = response.data;\n                if (TranscriptionJob.TranscriptionJobStatus === 'COMPLETED') {\n                    clearInterval(interval);\n                    const transcriptUri = TranscriptionJob.Transcript.TranscriptFileUri;\n                    await fetchTranscriptionText(transcriptUri); // Fetch the transcription text\n                } else if (TranscriptionJob.TranscriptionJobStatus === 'FAILED') {\n                    clearInterval(interval);\n                    setErrorMessage('Transcription job failed.');\n                    console.error('Transcription job failed');\n                }\n            } catch (error) {\n                console.error('Error checking transcription status:', error);\n                setErrorMessage('Error checking transcription status. Please try again.');\n                clearInterval(interval);\n            }\n        }, 5000); // Check status every 5 seconds\n    };\n\n    const fetchTranscriptionText = async (transcriptUri) => {\n        try {\n            const transcriptResponse = await axios.get(transcriptUri);\n            const text = transcriptResponse.data.results.transcripts[0].transcript; \n            setEntry(text);\n        } catch (error) {\n            console.error('Error fetching transcription text:', error);\n            setErrorMessage('Error fetching transcription text. Please try again.');\n        }\n    };\n//==================================================================\n    // Fetch existing entry when date changes\n    const fetchExistingEntry = async (entryDate) => {\n        try {\n            const response = await axios.get('http://localhost:5000/api/diary/get-entry', {\n                params: { entryDate, email }\n            });\n            const { content, imageUrl } = response.data;\n            \n            // Populate the form with the existing data\n            setEntry(content || '');\n            setImage(imageUrl ? await fetchImageFromUrl(imageUrl) : null);\n            setExistingEntry(response.data); // Store the fetched entry\n        } catch (error) {\n            console.log('No entry found for this date');\n            setEntry(''); // Clear the entry field if no entry exists\n            setImage(null); // Clear the image if no entry exists\n        }\n    };\n\n    // Helper to fetch image blob from the URL\n    const fetchImageFromUrl = async (url) => {\n        const response = await fetch(url);\n        const blob = await response.blob();\n        return new File([blob], \"existingImage\", { type: blob.type });\n    };\n\n    // Call fetchExistingEntry when the date changes\n    useEffect(() => {\n        const dateString = selectedDate.toISOString().substr(0, 10); // Format the date as YYYY-MM-DD\n        fetchExistingEntry(dateString);// eslint-disable-next-line\n    }, [selectedDate]);\n\n    // Handle text area input change\n    const handleDataChange = (event) => {\n        setEntry(event.target.value); // Update entry state\n    };\n\n    // Handle date change\n    const handleDateChange = (event) => {\n        const newDate = new Date(event.target.value);\n        setSelectedDate(newDate);\n        setTextValue(newDate.toLocaleDateString(undefined, {\n            day: '2-digit',\n            month: 'short',\n            year: 'numeric'\n        }));\n    };\n    const [imageVisible, setImageVisible] = useState(false); // State for controlling image visibility\n\n    useEffect(() => {\n        // If sentimentImage is set, start a timer to hide it after 10 seconds\n        if (imageVisible) {\n            const timer = setTimeout(() => {\n                setSentimentImage(null); // Hide the sentiment image after 10 seconds\n                setImageVisible(false); // Hide the image\n            }, 10000); // 10 seconds delay\n\n            // Cleanup function to clear the timeout if the component is unmounted or image is reset earlier\n            return () => clearTimeout(timer);\n        }\n    }, [imageVisible]); // Run when imageVisible changes\n    // Handle form submission\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const entryId = `entry-${Date.now()}`; // Generate unique entry ID\n    \n        let imageUrl = null;\n        if (image) {\n            try {\n                const formData = new FormData();\n                formData.append('image', image);\n    \n                const uploadResponse = await axios.post('http://localhost:5000/api/diary/upload-image', formData, {\n                    headers: { 'Content-Type': 'multipart/form-data' }\n                });\n                imageUrl = uploadResponse.data.imageUrl;\n            } catch (error) {\n                console.error('Error uploading image:', error);\n            }\n        }\n    \n        // Store or update the diary entry (with image URL if it was uploaded)\n        try {\n            await axios.post('http://localhost:5000/api/diary/add-entry', {\n                entryId: existingEntry ? existingEntry.entryId : entryId, // Use existing entryId if updating\n                email,\n                entryDate: selectedDate.toISOString().substr(0, 10),\n                content: entry,\n                imageUrl, // Store image URL in DynamoDB\n            });\n            console.log('Diary entry added/updated successfully');\n    \n            // Fetch sentiment after adding/updating the entry using the new endpoint\n            const sentimentResponse = await axios.get('http://localhost:5000/api/diary/get-sentiment-by-email-and-date', {\n                params: {\n                    entryDate: selectedDate.toISOString().substr(0, 10), // Use the same date\n                    email\n                }\n            });\n            if (entry.length < 20) {\n                setReply(\"You could always say more\");\n                setSentimentImage('https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/NEUTRALIMG.png'); // Set neutral sentiment image\n                return; // Exit early since we don't need to fetch sentiment\n            }\n            if (sentimentResponse.status === 200) {\n                const { randomReply, sentiment } = sentimentResponse.data;\n                setReply(randomReply);\n                if (sentiment === 'POSITIVE') {\n                    setSentimentImage('https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/POSITIVE.png');\n                } else if (sentiment === 'NEGATIVE') {\n                    setSentimentImage('https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/NEGATIVE.png');\n                } else if (sentiment === 'MIXED') {\n                    setSentimentImage('https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/MIXED.png');\n                } else {\n                    setSentimentImage('https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/NEUTRAL.png');\n                }\n            }\n            setImageVisible(true);\n        } catch (error) {\n            console.error('Error adding/updating diary entry:', error);\n        }\n    };\n    \n    \n\n    // Handle image upload\n    const handleImageUpload = (event) => {\n        const file = event.target.files[0]; // Store only the first uploaded image file\n        if (file) {\n            setImage(file); // Update image state with the file\n        }\n    };\n\n    const triggerFileInput = () => {\n        imageInput.current.click(); // Trigger file input click when the div is clicked\n    };\n\n    return (\n        <div style={{ padding: '20px' ,paddingTop: '100px' }}>\n            <div\n                style={{\n                    width: '93%',\n                    height: '60px',\n                    display: 'flex',\n                    marginLeft: '50px',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                }}\n            >\n                <div style={{\n                            cursor: 'pointer',\n                            width: '360px',\n                            height: '50px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            gap: '1rem',\n                            fontSize: '1.125em',\n                            fontWeight: 700,\n                            letterSpacing: '2px',\n                            color: 'black',\n                            backgroundColor: '#644dff',\n                            border: '2px solid #4836bb',\n                            borderRadius: '0.75rem',\n                            boxShadow: '0 8px 0 #4836bb',\n                            transition: 'all 0.1s ease',\n                            filter: 'drop-shadow(0 15px 20px rgba(101, 77, 255, 0.39))',\n                            marginTop: '-30px'}}\n                >\n                <label style={{color:'white', marginRight:'10px'}}>Select Date:</label>\n                <input\n                    type=\"date\"\n                    value={selectedDate.toISOString().substr(0, 10)}\n                    onChange={handleDateChange}\n                    style={{backgroundColor:'#644dff',\n                        borderRadius:'10px',\n                        color:'white',\n                        fontWeight:'700',\n                        height:'40px',\n                        width:'150px',\n                        paddingLeft:'10px',\n                        paddingRight:'10px',\n                        fontSize: 19\n                    }}\n                />\n                </div>\n            </div>\n            <div\n                style={{\n                    width: '803px',\n                    height: '552.5px',\n                    margin: 'auto',\n                    padding: '20px',\n                    backgroundImage: `url(https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/opendiary2.png)`,\n                    backgroundPosition: 'center',\n                    backgroundSize: 'cover',\n                }}\n            >\n                <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n                    {/* Left Div for Uploaded Image */}\n                    <div\n                        style={{\n                            width: '44%',\n                            height: '510px',\n                            marginLeft: '50px',\n                            backgroundColor: 'transparent',\n                            padding: '10px',\n                            overflow: 'hidden',\n                            display: 'flex',         // Added to enable flexbox centering\n                            alignItems: 'center',   // Vertically center the image\n                            justifyContent: 'center' // Horizontally center the image\n                        }}\n                        onClick={triggerFileInput} // Trigger file input on click\n                    >\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            ref={imageInput}\n                            onChange={handleImageUpload}\n                            style={{ display: 'none' }} // Hide file input\n                        />\n                        {image ? (\n                            <img\n                                src={URL.createObjectURL(image)} // Generate a URL for the selected image\n                                alt=\"Uploaded\"\n                                style={{ maxWidth: '100%', maxHeight: '100%', marginBottom: '10px' }} // Show the selected image\n                            />\n                        ) : (\n                            // <p style={{ color: 'grey' }}>Click to upload image</p>\n                            <img src='https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/imgup.png' alt='imgup'style={{width:'50px',height:'50px',cursor:'pointer'}}/>\n                        )}\n                    </div>\n\n                    {/* Right Div for Text Area */}\n                    <div\n                        style={{\n                            width: '47%',\n                            height: '490px',\n                            marginTop: '5px',\n                            marginRight: '5px',\n                            backgroundColor: 'transparent',\n                            padding: '10px',\n                            position:'relative'\n                        }}\n                    >\n                        <span style={{ marginRight: '10px', color: 'black' ,fontWeight:600}}>{textValue}</span>\n                        <textarea\n                            style={{\n                                height: '100%',\n                                width: '100%',\n                                padding: '10px',\n                                border: 'none',\n                                outline: 'none',\n                                resize: 'none',\n                                boxSizing: 'border-box',\n                                backgroundColor: 'transparent',\n                                fontFamily: 'Dancing Script, cursive',\n                                overflow: 'hidden',\n                            }}\n                            value={entry}\n                            onChange={handleDataChange}\n                            spellCheck=\"false\" \n                        />\n                        <img\n                            src='https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/save.png'\n                            alt=\"save\"\n                            style={{\n                                width: '30px',\n                                height: '30px',\n                                position: 'absolute',\n                                bottom: '0', // Position at the bottom\n                                right: '70px', // Position at the right\n                                cursor: 'pointer',\n                            }}\n                            onClick={handleSubmit} // Trigger save action on click\n                            onMouseEnter={() => setShowSubmit(true)}\n                            onMouseLeave={() => setShowSubmit(false)}\n                        />\n                        {showSubmit && (\n                            <div style={{\n                                position: 'absolute',\n                                bottom: '35px', // Adjust to position above the icon\n                                right: '60px',\n                                backgroundColor: '#333',\n                                color: '#fff',\n                                padding: '5px 8px',\n                                borderRadius: '4px',\n                                fontSize: '12px',\n                                whiteSpace: 'nowrap', // Prevent text from wrapping\n                            }}>\n                                Submit\n                            </div>\n                        )}    \n                        <img\n                            src='https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/translate.png'\n                            alt=\"translate\"\n                            style={{\n                                width: '35px',\n                                height: '35px',\n                                position: 'absolute',\n                                bottom: '-1px', // Position at the bottom\n                                right: '160px', // Position at the right\n                                cursor: 'pointer'\n                            }}\n                            onClick={handleTranslate}\n                            onMouseEnter={() => setShowTranslate(true)}\n                            onMouseLeave={() => setShowTranslate(false)}\n                        />\n                        {showTranslate && (\n                            <div style={{\n                                position: 'absolute',\n                                bottom: '35px', // Adjust to position above the icon\n                                right: '150px',\n                                backgroundColor: '#333',\n                                color: '#fff',\n                                padding: '5px 8px',\n                                borderRadius: '4px',\n                                fontSize: '12px',\n                                whiteSpace: 'nowrap', // Prevent text from wrapping\n                            }}>\n                                Translate\n                            </div>\n                        )} \n                        <img\n                            src='https://lifelens-images.s3.ap-southeast-2.amazonaws.com/assets/mic.png'\n                            alt=\"mic\"\n                            style={{\n                                width: '30px',\n                                height: '30px',\n                                position: 'absolute',\n                                bottom: '0', // Position at the bottom\n                                right: '250px', // Position at the right\n                                cursor: 'pointer',\n                                backgroundColor: recording ? 'red' : 'transparent',\n                                borderRadius:'10px'\n                            }}\n                            onClick={handleToggleRecording}\n                            onMouseEnter={() => setShowMic(true)}\n                            onMouseLeave={() => setShowMic(false)}\n                        />\n                        {recording && (\n                        <div style={{ fontSize: '24px', fontWeight: 'bold' ,width: '30px',\n                                height: '30px',\n                                position: 'absolute',\n                                bottom: '15px', // Position at the bottom\n                                right: '270px',}}>\n                            {formatTime(timer)}\n                        </div>)}\n                        {/* Tooltip for Submit text */}\n                        {showMic && (\n                            <div style={{\n                                position: 'absolute',\n                                bottom: '35px', // Adjust to position above the icon\n                                right: '215px',\n                                backgroundColor: '#333',\n                                color: '#fff',\n                                padding: '5px 8px',\n                                borderRadius: '4px',\n                                fontSize: '12px',\n                                whiteSpace: 'nowrap', // Prevent text from wrapping\n                            }}>\n                                {recording ? 'Stop Recording' : 'Start Recording'}\n                            </div>\n                        )}                     \n                    </div>\n                </div>\n            </div>\n            {/* Sentiment Image Display */}\n            {sentimentImage && imageVisible && (\n                <div style={{\n                    position: 'fixed', // Change to fixed\n                    bottom: '0px', // Distance from the bottom\n                    left: '0px', // Distance from the left\n                    zIndex: 100, // Ensure it's above other components\n                }}>\n                    <img\n                        src={sentimentImage}\n                        alt=\"Sentiment\"\n                        style={{ width: '100%', height: '100%', objectFit: 'cover' }} // Adjust size as needed\n                    />\n                </div>\n            )}\n            {sentimentImage && imageVisible && (\n            <div style={{\n                position: 'fixed',\n                bottom: '10px', // Distance from the bottom\n                left: '200px', // Distance from the left\n                zIndex: 101, // Ensure it's above other components\n            }}>\n                <div\n                    style={{\n                        width: '200px', // Adjust width as needed\n                        height: '100px', // Adjust height as needed\n                        padding: '10px', // Padding for text area\n                        borderRadius: '5px', // Rounded corners\n                        border: '1px solid #ccc', // Border style\n                        backgroundColor: 'rgba(255, 255, 255, 0.8)', // Slightly transparent background\n                        fontSize: '16px', // Font size\n                        overflowY: 'auto', // Allow scrolling if content overflows\n                    }}\n                >\n                    {reply} {/* Display the reply; nothing shown if empty or null */}\n                </div>\n            </div>\n            )}\n            \n        </div>\n    );\n};\n\nexport default AddData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
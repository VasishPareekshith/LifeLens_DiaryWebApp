{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASISH1211\\\\Desktop\\\\LifeLens\\\\frontend\\\\src\\\\components\\\\CalendarView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./CalendarView.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarView = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [eventName, setEventName] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const Date_Click_Fun = date => {\n    setSelectedDate(date);\n  };\n  const Event_Data_Update = event => {\n    setEventName(event.target.value);\n  };\n  const Create_Event_Fun = () => {\n    if (selectedDate && eventName) {\n      const newEvent = {\n        id: new Date().getTime(),\n        date: selectedDate,\n        title: eventName\n      };\n      setEvents([...events, newEvent]);\n      setSelectedDate(null);\n      setEventName(\"\");\n      setSelectedDate(newEvent.date);\n    }\n  };\n  const Update_Event_Fun = (eventId, newName) => {\n    const updated_Events = events.map(event => {\n      if (event.id === eventId) {\n        return {\n          ...event,\n          title: newName\n        };\n      }\n      return event;\n    });\n    setEvents(updated_Events);\n  };\n  const Delete_Event_Fun = eventId => {\n    const updated_Events = events.filter(event => event.id !== eventId);\n    setEvents(updated_Events);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Your Timeline \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-container\",\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          value: selectedDate,\n          onClickDay: Date_Click_Fun,\n          tileClassName: ({\n            date\n          }) => selectedDate && date.toDateString() === selectedDate.toDateString() ? \"selected\" : events.some(event => event.date.toDateString() === date.toDateString()) ? \"event-marked\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(CalendarView, \"d3GnH8vSGKaj668TwXi5EW0hUwk=\");\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","CalendarView","_s","selectedDate","setSelectedDate","eventName","setEventName","events","setEvents","Date_Click_Fun","date","Event_Data_Update","event","target","value","Create_Event_Fun","newEvent","id","Date","getTime","title","Update_Event_Fun","eventId","newName","updated_Events","map","Delete_Event_Fun","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClickDay","tileClassName","toDateString","some","_c","$RefreshReg$"],"sources":["C:/Users/VASISH1211/Desktop/LifeLens/frontend/src/components/CalendarView.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./CalendarView.css\";\r\n\r\nconst CalendarView = () => {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n    const [eventName, setEventName] = useState(\"\");\r\n    const [events, setEvents] = useState([]);\r\n\r\n    const Date_Click_Fun = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    const Event_Data_Update = (event) => {\r\n        setEventName(event.target.value);\r\n    };\r\n\r\n    const Create_Event_Fun = () => {\r\n        if (selectedDate && eventName) {\r\n            const newEvent = {\r\n                id: new Date().getTime(),\r\n                date: selectedDate,\r\n                title: eventName,\r\n            };\r\n            setEvents([...events, newEvent]);\r\n            setSelectedDate(null);\r\n            setEventName(\"\");\r\n            setSelectedDate(newEvent.date);\r\n        }\r\n    };\r\n\r\n    const Update_Event_Fun = (eventId, newName) => {\r\n        const updated_Events = events.map((event) => {\r\n            if (event.id === eventId) {\r\n                return {\r\n                    ...event,\r\n                    title: newName,\r\n                };\r\n            }\r\n            return event;\r\n        });\r\n        setEvents(updated_Events);\r\n    };\r\n\r\n    const Delete_Event_Fun = (eventId) => {\r\n        const updated_Events = events.filter((event) => event.id !== eventId);\r\n        setEvents(updated_Events);\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <h1> Your Timeline </h1>\r\n            <div className=\"container\">\r\n                <div className=\"calendar-container\">\r\n                    <Calendar\r\n                        value={selectedDate}\r\n                        onClickDay={Date_Click_Fun}\r\n                        tileClassName={({ date }) =>\r\n                            selectedDate &&\r\n                            date.toDateString() === selectedDate.toDateString()\r\n                                ? \"selected\"\r\n                                : events.some(\r\n                                      (event) =>\r\n                                          event.date.toDateString() ===\r\n                                          date.toDateString(),\r\n                                  )\r\n                                ? \"event-marked\"\r\n                                : \"\"\r\n                        }\r\n                    />{\" \"}\r\n                </div>\r\n                \r\n            </div>{\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
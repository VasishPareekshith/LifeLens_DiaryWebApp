{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASISH1211\\\\Desktop\\\\PROJ\\\\LifeLens\\\\frontend\\\\src\\\\components\\\\AddData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Diary from \"../assets/opendiary2.png\";\nimport Hole from \"../assets/opendiaryhole.png\";\nimport POSITIVEIMG from '../assets/POSITIVE.png'; // Image for positive sentiment\nimport NEGATIVEIMG from '../assets/NEGATIVE.png'; // Image for neutral sentiment\nimport MIXEDIMG from '../assets/MIXED.png'; // Image for negative sentiment\nimport NEUTRALIMG from '../assets/NEUTRAL.png'; // Image for positive sentiment\nimport save from '../assets/save.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddData = ({\n  setCurrentPage\n}) => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date()); // Initialize with current date\n  const [textValue, setTextValue] = useState(new Date().toLocaleDateString(undefined, {\n    day: '2-digit',\n    month: 'short',\n    year: 'numeric'\n  }));\n  const [image, setImage] = useState(null); // State to hold a single uploaded image\n  const [sentimentImage, setSentimentImage] = useState(null);\n  const [reply, setReply] = useState('');\n  const [entry, setEntry] = useState(''); // State to hold the diary text\n  const [existingEntry, setExistingEntry] = useState(null); // State to hold the existing entry (if any)\n  const imageInput = useRef(null);\n  const email = localStorage.getItem('email'); // Assuming email is stored in localStorage\n  const [showTooltip, setShowTooltip] = useState(false);\n\n  //===============================================================\n  const [isRecording, setIsRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [transcription, setTranscription] = useState('');\n  const mediaRecorderRef = React.useRef(null);\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    mediaRecorderRef.current = new MediaRecorder(stream);\n    mediaRecorderRef.current.ondataavailable = event => {\n      setAudioBlob(event.data); // Store the recorded audio blob\n    };\n    mediaRecorderRef.current.start();\n    setIsRecording(true);\n  };\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setIsRecording(false);\n  };\n  const uploadAndTranscribe = async () => {\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recording.wav');\n    try {\n      const response = await axios.post('http://localhost:5000/api/diary/start-transcription', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setTranscription(response.data.transcribedText); // assuming backend returns text\n    } catch (error) {\n      console.error('Error transcribing audio:', error);\n    }\n  };\n  //=========================================================================\n  // Fetch existing entry when date changes\n  const fetchExistingEntry = async entryDate => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/diary/get-entry', {\n        params: {\n          entryDate,\n          email\n        }\n      });\n      const {\n        content,\n        imageUrl\n      } = response.data;\n\n      // Populate the form with the existing data\n      setEntry(content || '');\n      setImage(imageUrl ? await fetchImageFromUrl(imageUrl) : null);\n      setExistingEntry(response.data); // Store the fetched entry\n    } catch (error) {\n      console.log('No entry found for this date');\n      setEntry(''); // Clear the entry field if no entry exists\n      setImage(null); // Clear the image if no entry exists\n    }\n  };\n\n  // Helper to fetch image blob from the URL\n  const fetchImageFromUrl = async url => {\n    const response = await fetch(url);\n    const blob = await response.blob();\n    return new File([blob], \"existingImage\", {\n      type: blob.type\n    });\n  };\n\n  // Call fetchExistingEntry when the date changes\n  useEffect(() => {\n    const dateString = selectedDate.toISOString().substr(0, 10); // Format the date as YYYY-MM-DD\n    fetchExistingEntry(dateString);\n  }, [selectedDate]);\n\n  // Handle text area input change\n  const handleDataChange = event => {\n    setEntry(event.target.value); // Update entry state\n  };\n\n  // Handle date change\n  const handleDateChange = event => {\n    const newDate = new Date(event.target.value);\n    setSelectedDate(newDate);\n    setTextValue(newDate.toLocaleDateString(undefined, {\n      day: '2-digit',\n      month: 'short',\n      year: 'numeric'\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const entryId = `entry-${Date.now()}`; // Generate unique entry ID\n\n    let imageUrl = null;\n    if (image) {\n      try {\n        const formData = new FormData();\n        formData.append('image', image);\n        const uploadResponse = await axios.post('http://localhost:5000/api/diary/upload-image', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        imageUrl = uploadResponse.data.imageUrl;\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n\n    // Store or update the diary entry (with image URL if it was uploaded)\n    try {\n      await axios.post('http://localhost:5000/api/diary/add-entry', {\n        entryId: existingEntry ? existingEntry.entryId : entryId,\n        // Use existing entryId if updating\n        email,\n        entryDate: selectedDate.toISOString().substr(0, 10),\n        content: entry,\n        imageUrl // Store image URL in DynamoDB\n      });\n      console.log('Diary entry added/updated successfully');\n\n      // Check entry length and set reply and sentiment image accordingly\n      if (entry.length < 30) {\n        setReply(\"You could always say more\");\n        setSentimentImage(NEUTRALIMG); // Set neutral sentiment image\n        return; // Exit early since we don't need to fetch sentiment\n      }\n\n      // Fetch sentiment after adding/updating the entry using the new endpoint\n      const sentimentResponse = await axios.get('http://localhost:5000/api/diary/get-sentiment-by-email-and-date', {\n        params: {\n          entryDate: selectedDate.toISOString().substr(0, 10),\n          // Use the same date\n          email\n        }\n      });\n      if (sentimentResponse.status === 200) {\n        const {\n          sentiment,\n          randomReply\n        } = sentimentResponse.data;\n        console.log('Sentiment:', sentiment);\n        setReply(randomReply);\n        console.log(randomReply);\n        if (sentiment === 'POSITIVE') {\n          setSentimentImage(POSITIVEIMG);\n        } else if (sentiment === 'NEGATIVE') {\n          setSentimentImage(NEGATIVEIMG);\n        } else if (sentiment === 'MIXED') {\n          setSentimentImage(MIXEDIMG);\n        } else {\n          setSentimentImage(NEUTRALIMG);\n        }\n      }\n    } catch (error) {\n      console.error('Error adding/updating diary entry:', error);\n    }\n  };\n\n  // Handle image upload\n  const handleImageUpload = event => {\n    const file = event.target.files[0]; // Store only the first uploaded image file\n    if (file) {\n      setImage(file); // Update image state with the file\n    }\n  };\n  const triggerFileInput = () => {\n    imageInput.current.click(); // Trigger file input click when the div is clicked\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      paddingTop: '100px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '93%',\n        height: '60px',\n        display: 'flex',\n        marginLeft: '50px',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          cursor: 'pointer',\n          width: '380px',\n          height: '60px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          gap: '1rem',\n          fontSize: '1.125em',\n          fontWeight: 800,\n          letterSpacing: '2px',\n          color: '#fff',\n          backgroundColor: '#644dff',\n          border: '2px solid #4836bb',\n          borderRadius: '0.75rem',\n          boxShadow: '0 8px 0 #4836bb',\n          transition: 'all 0.1s ease',\n          filter: 'drop-shadow(0 15px 20px rgba(101, 77, 255, 0.39))',\n          marginTop: '-30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            color: 'white',\n            marginRight: '10px',\n            marginTop: '5px'\n          },\n          children: \"Select Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: selectedDate.toISOString().substr(0, 10),\n          onChange: handleDateChange,\n          style: {\n            backgroundColor: '#644dff',\n            borderRadius: '10px',\n            color: 'white',\n            height: '40px',\n            width: '150px',\n            paddingLeft: '10px',\n            paddingRight: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '803px',\n        height: '552.5px',\n        margin: 'auto',\n        padding: '20px',\n        backgroundImage: `url(${Hole})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Audio Recorder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), audioBlob && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: uploadAndTranscribe,\n        children: \"Upload & Transcribe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }, this), transcription && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Transcription: \", transcription]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '44%',\n            height: '510px',\n            marginLeft: '50px',\n            backgroundColor: 'transparent',\n            padding: '10px',\n            overflow: 'hidden',\n            display: 'flex',\n            // Added to enable flexbox centering\n            alignItems: 'center',\n            // Vertically center the image\n            justifyContent: 'center' // Horizontally center the image\n          },\n          onClick: triggerFileInput // Trigger file input on click\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            ref: imageInput,\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            } // Hide file input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), image ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(image) // Generate a URL for the selected image\n            ,\n            alt: \"Uploaded\",\n            style: {\n              maxWidth: '100%',\n              maxHeight: '100%',\n              marginBottom: '10px'\n            } // Show the selected image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'grey'\n            },\n            children: \"Click to upload image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this) // Placeholder text when no image is selected\n          ]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '47%',\n            height: '500px',\n            marginTop: '5px',\n            marginRight: '5px',\n            backgroundColor: 'transparent',\n            padding: '10px',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginRight: '10px',\n              color: 'black'\n            },\n            children: textValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            style: {\n              height: '100%',\n              width: '100%',\n              padding: '10px',\n              border: 'none',\n              outline: 'none',\n              resize: 'none',\n              boxSizing: 'border-box',\n              backgroundColor: 'transparent',\n              fontFamily: 'Dancing Script, cursive'\n            },\n            value: entry,\n            onChange: handleDataChange,\n            spellCheck: \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: save,\n            alt: \"save\",\n            style: {\n              width: '30px',\n              height: '30px',\n              position: 'absolute',\n              bottom: '10px',\n              // Position at the bottom\n              right: '10px',\n              // Position at the right\n              cursor: 'pointer'\n            },\n            onClick: handleSubmit // Trigger save action on click\n            ,\n            onMouseEnter: () => setShowTooltip(true),\n            onMouseLeave: () => setShowTooltip(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this), showTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              bottom: '40px',\n              // Adjust to position above the icon\n              right: '0',\n              backgroundColor: '#333',\n              color: '#fff',\n              padding: '5px 8px',\n              borderRadius: '4px',\n              fontSize: '12px',\n              whiteSpace: 'nowrap' // Prevent text from wrapping\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), sentimentImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        // Change to fixed\n        bottom: '0px',\n        // Distance from the bottom\n        left: '0px',\n        // Distance from the left\n        zIndex: 100 // Ensure it's above other components\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: sentimentImage,\n        alt: \"Sentiment\",\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover'\n        } // Adjust size as needed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 17\n    }, this), sentimentImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: '10px',\n        // Distance from the bottom\n        left: '200px',\n        // Distance from the left\n        zIndex: 101 // Ensure it's above other components\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '200px',\n          // Adjust width as needed\n          height: '100px',\n          // Adjust height as needed\n          padding: '10px',\n          // Padding for text area\n          borderRadius: '5px',\n          // Rounded corners\n          border: '1px solid #ccc',\n          // Border style\n          backgroundColor: 'rgba(255, 255, 255, 0.8)',\n          // Slightly transparent background\n          fontSize: '16px',\n          // Font size\n          overflowY: 'auto' // Allow scrolling if content overflows\n        },\n        children: [reply, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 9\n  }, this);\n};\n_s(AddData, \"Uuh9RoKtTe4mIXEWP62Cqqcyl/k=\");\n_c = AddData;\nexport default AddData;\nvar _c;\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Diary","Hole","POSITIVEIMG","NEGATIVEIMG","MIXEDIMG","NEUTRALIMG","save","jsxDEV","_jsxDEV","AddData","setCurrentPage","_s","selectedDate","setSelectedDate","Date","textValue","setTextValue","toLocaleDateString","undefined","day","month","year","image","setImage","sentimentImage","setSentimentImage","reply","setReply","entry","setEntry","existingEntry","setExistingEntry","imageInput","email","localStorage","getItem","showTooltip","setShowTooltip","isRecording","setIsRecording","audioBlob","setAudioBlob","transcription","setTranscription","mediaRecorderRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","current","MediaRecorder","ondataavailable","event","data","start","stopRecording","stop","uploadAndTranscribe","formData","FormData","append","response","post","headers","transcribedText","error","console","fetchExistingEntry","entryDate","get","params","content","imageUrl","fetchImageFromUrl","log","url","fetch","blob","File","type","dateString","toISOString","substr","handleDataChange","target","value","handleDateChange","newDate","handleSubmit","preventDefault","entryId","now","uploadResponse","length","sentimentResponse","status","sentiment","randomReply","handleImageUpload","file","files","triggerFileInput","click","style","padding","paddingTop","children","width","height","display","marginLeft","justifyContent","alignItems","cursor","gap","fontSize","fontWeight","letterSpacing","color","backgroundColor","border","borderRadius","boxShadow","transition","filter","marginTop","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onChange","paddingLeft","paddingRight","margin","backgroundImage","backgroundPosition","backgroundSize","onClick","overflow","accept","ref","src","URL","createObjectURL","alt","maxWidth","maxHeight","marginBottom","position","outline","resize","boxSizing","fontFamily","spellCheck","bottom","right","onMouseEnter","onMouseLeave","whiteSpace","left","zIndex","objectFit","overflowY","_c","$RefreshReg$"],"sources":["C:/Users/VASISH1211/Desktop/PROJ/LifeLens/frontend/src/components/AddData.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Diary from \"../assets/opendiary2.png\";\nimport Hole from \"../assets/opendiaryhole.png\";\nimport POSITIVEIMG from '../assets/POSITIVE.png'; // Image for positive sentiment\nimport NEGATIVEIMG from '../assets/NEGATIVE.png'; // Image for neutral sentiment\nimport MIXEDIMG from '../assets/MIXED.png'; // Image for negative sentiment\nimport NEUTRALIMG from '../assets/NEUTRAL.png'; // Image for positive sentiment\nimport save from '../assets/save.png';\n\nconst AddData = ({ setCurrentPage }) => {\n    const [selectedDate, setSelectedDate] = useState(new Date()); // Initialize with current date\n    const [textValue, setTextValue] = useState(new Date().toLocaleDateString(undefined, {\n        day: '2-digit',\n        month: 'short',\n        year: 'numeric'\n    }));\n    const [image, setImage] = useState(null); // State to hold a single uploaded image\n    const [sentimentImage, setSentimentImage] = useState(null);\n    const [reply, setReply] = useState('');\n    const [entry, setEntry] = useState(''); // State to hold the diary text\n    const [existingEntry, setExistingEntry] = useState(null); // State to hold the existing entry (if any)\n    const imageInput = useRef(null);\n    const email = localStorage.getItem('email'); // Assuming email is stored in localStorage\n    const [showTooltip, setShowTooltip] = useState(false);\n\n    //===============================================================\n    const [isRecording, setIsRecording] = useState(false);\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [transcription, setTranscription] = useState('');\n  const mediaRecorderRef = React.useRef(null);\n\n  const startRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    mediaRecorderRef.current = new MediaRecorder(stream);\n\n    mediaRecorderRef.current.ondataavailable = (event) => {\n      setAudioBlob(event.data); // Store the recorded audio blob\n    };\n\n    mediaRecorderRef.current.start();\n    setIsRecording(true);\n  };\n\n  const stopRecording = () => {\n    mediaRecorderRef.current.stop();\n    setIsRecording(false);\n  };\n\n  const uploadAndTranscribe = async () => {\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recording.wav');\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/diary/start-transcription', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      setTranscription(response.data.transcribedText); // assuming backend returns text\n    } catch (error) {\n      console.error('Error transcribing audio:', error);\n    }\n  };\n  //=========================================================================\n    // Fetch existing entry when date changes\n    const fetchExistingEntry = async (entryDate) => {\n        try {\n            const response = await axios.get('http://localhost:5000/api/diary/get-entry', {\n                params: { entryDate, email }\n            });\n            const { content, imageUrl } = response.data;\n            \n            // Populate the form with the existing data\n            setEntry(content || '');\n            setImage(imageUrl ? await fetchImageFromUrl(imageUrl) : null);\n            setExistingEntry(response.data); // Store the fetched entry\n        } catch (error) {\n            console.log('No entry found for this date');\n            setEntry(''); // Clear the entry field if no entry exists\n            setImage(null); // Clear the image if no entry exists\n        }\n    };\n\n    // Helper to fetch image blob from the URL\n    const fetchImageFromUrl = async (url) => {\n        const response = await fetch(url);\n        const blob = await response.blob();\n        return new File([blob], \"existingImage\", { type: blob.type });\n    };\n\n    // Call fetchExistingEntry when the date changes\n    useEffect(() => {\n        const dateString = selectedDate.toISOString().substr(0, 10); // Format the date as YYYY-MM-DD\n        fetchExistingEntry(dateString);\n    }, [selectedDate]);\n\n    // Handle text area input change\n    const handleDataChange = (event) => {\n        setEntry(event.target.value); // Update entry state\n    };\n\n    // Handle date change\n    const handleDateChange = (event) => {\n        const newDate = new Date(event.target.value);\n        setSelectedDate(newDate);\n        setTextValue(newDate.toLocaleDateString(undefined, {\n            day: '2-digit',\n            month: 'short',\n            year: 'numeric'\n        }));\n    };\n\n    // Handle form submission\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const entryId = `entry-${Date.now()}`; // Generate unique entry ID\n    \n        let imageUrl = null;\n        if (image) {\n            try {\n                const formData = new FormData();\n                formData.append('image', image);\n    \n                const uploadResponse = await axios.post('http://localhost:5000/api/diary/upload-image', formData, {\n                    headers: { 'Content-Type': 'multipart/form-data' }\n                });\n                imageUrl = uploadResponse.data.imageUrl;\n            } catch (error) {\n                console.error('Error uploading image:', error);\n            }\n        }\n    \n        // Store or update the diary entry (with image URL if it was uploaded)\n        try {\n            await axios.post('http://localhost:5000/api/diary/add-entry', {\n                entryId: existingEntry ? existingEntry.entryId : entryId, // Use existing entryId if updating\n                email,\n                entryDate: selectedDate.toISOString().substr(0, 10),\n                content: entry,\n                imageUrl, // Store image URL in DynamoDB\n            });\n            console.log('Diary entry added/updated successfully');\n    \n            // Check entry length and set reply and sentiment image accordingly\n            if (entry.length < 30) {\n                setReply(\"You could always say more\");\n                setSentimentImage(NEUTRALIMG); // Set neutral sentiment image\n                return; // Exit early since we don't need to fetch sentiment\n            }\n    \n            // Fetch sentiment after adding/updating the entry using the new endpoint\n            const sentimentResponse = await axios.get('http://localhost:5000/api/diary/get-sentiment-by-email-and-date', {\n                params: {\n                    entryDate: selectedDate.toISOString().substr(0, 10), // Use the same date\n                    email\n                }\n            });\n    \n            if (sentimentResponse.status === 200) {\n                const { sentiment, randomReply } = sentimentResponse.data;\n                console.log('Sentiment:', sentiment);\n                setReply(randomReply);\n                console.log(randomReply);\n                if (sentiment === 'POSITIVE') {\n                    setSentimentImage(POSITIVEIMG);\n                } else if (sentiment === 'NEGATIVE') {\n                    setSentimentImage(NEGATIVEIMG);\n                } else if (sentiment === 'MIXED') {\n                    setSentimentImage(MIXEDIMG);\n                } else {\n                    setSentimentImage(NEUTRALIMG);\n                }\n            }\n        } catch (error) {\n            console.error('Error adding/updating diary entry:', error);\n        }\n    };\n    \n    \n\n    // Handle image upload\n    const handleImageUpload = (event) => {\n        const file = event.target.files[0]; // Store only the first uploaded image file\n        if (file) {\n            setImage(file); // Update image state with the file\n        }\n    };\n\n    const triggerFileInput = () => {\n        imageInput.current.click(); // Trigger file input click when the div is clicked\n    };\n\n    return (\n        <div style={{ padding: '20px' ,paddingTop: '100px' }}>\n            <div\n                style={{\n                    width: '93%',\n                    height: '60px',\n                    display: 'flex',\n                    marginLeft: '50px',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                }}\n            >\n                <div style={{\n                            cursor: 'pointer',\n                            width: '380px',\n                            height: '60px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            gap: '1rem',\n                            fontSize: '1.125em',\n                            fontWeight: 800,\n                            letterSpacing: '2px',\n                            color: '#fff',\n                            backgroundColor: '#644dff',\n                            border: '2px solid #4836bb',\n                            borderRadius: '0.75rem',\n                            boxShadow: '0 8px 0 #4836bb',\n                            transition: 'all 0.1s ease',\n                            filter: 'drop-shadow(0 15px 20px rgba(101, 77, 255, 0.39))',\n                            marginTop: '-30px'}}\n                >\n                <label style={{color:'white', marginRight:'10px', marginTop:'5px'}}>Select Date:</label>\n                <input\n                    type=\"date\"\n                    value={selectedDate.toISOString().substr(0, 10)}\n                    onChange={handleDateChange}\n                    style={{backgroundColor:'#644dff',\n                        borderRadius:'10px',\n                        color:'white',\n                        height:'40px',\n                        width:'150px',\n                        paddingLeft:'10px',\n                        paddingRight:'10px'\n                    }}\n                />\n                </div>\n            </div>\n            <div\n                style={{\n                    width: '803px',\n                    height: '552.5px',\n                    margin: 'auto',\n                    padding: '20px',\n                    backgroundImage: `url(${Hole})`,\n                    backgroundPosition: 'center',\n                    backgroundSize: 'cover',\n                }}\n            >\n                <h2>Audio Recorder</h2>\n      {isRecording ? (\n        <button onClick={stopRecording}>Stop Recording</button>\n      ) : (\n        <button onClick={startRecording}>Start Recording</button>\n      )}\n      {audioBlob && <button onClick={uploadAndTranscribe}>Upload & Transcribe</button>}\n      {transcription && <p>Transcription: {transcription}</p>}\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    {/* Left Div for Uploaded Image */}\n                    <div\n                        style={{\n                            width: '44%',\n                            height: '510px',\n                            marginLeft: '50px',\n                            backgroundColor: 'transparent',\n                            padding: '10px',\n                            overflow: 'hidden',\n                            display: 'flex',         // Added to enable flexbox centering\n                            alignItems: 'center',   // Vertically center the image\n                            justifyContent: 'center' // Horizontally center the image\n                        }}\n                        onClick={triggerFileInput} // Trigger file input on click\n                    >\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            ref={imageInput}\n                            onChange={handleImageUpload}\n                            style={{ display: 'none' }} // Hide file input\n                        />\n                        {image ? (\n                            <img\n                                src={URL.createObjectURL(image)} // Generate a URL for the selected image\n                                alt=\"Uploaded\"\n                                style={{ maxWidth: '100%', maxHeight: '100%', marginBottom: '10px' }} // Show the selected image\n                            />\n                        ) : (\n                            <p style={{ color: 'grey' }}>Click to upload image</p> // Placeholder text when no image is selected\n                        )}\n                    </div>\n\n                    {/* Right Div for Text Area */}\n                    <div\n                        style={{\n                            width: '47%',\n                            height: '500px',\n                            marginTop: '5px',\n                            marginRight: '5px',\n                            backgroundColor: 'transparent',\n                            padding: '10px',\n                            position:'relative'\n                        }}\n                    >\n                        <span style={{ marginRight: '10px', color: 'black' }}>{textValue}</span>\n                        <textarea\n                            style={{\n                                height: '100%',\n                                width: '100%',\n                                padding: '10px',\n                                border: 'none',\n                                outline: 'none',\n                                resize: 'none',\n                                boxSizing: 'border-box',\n                                backgroundColor: 'transparent',\n                                fontFamily: 'Dancing Script, cursive'\n                            }}\n                            value={entry}\n                            onChange={handleDataChange}\n                            spellCheck=\"false\" \n                        />\n                        <img\n                            src={save}\n                            alt=\"save\"\n                            style={{\n                                width: '30px',\n                                height: '30px',\n                                position: 'absolute',\n                                bottom: '10px', // Position at the bottom\n                                right: '10px', // Position at the right\n                                cursor: 'pointer',\n                            }}\n                            onClick={handleSubmit} // Trigger save action on click\n                            onMouseEnter={() => setShowTooltip(true)}\n                            onMouseLeave={() => setShowTooltip(false)}\n                        />\n                        {/* Tooltip for Submit text */}\n                        {showTooltip && (\n                            <div style={{\n                                position: 'absolute',\n                                bottom: '40px', // Adjust to position above the icon\n                                right: '0',\n                                backgroundColor: '#333',\n                                color: '#fff',\n                                padding: '5px 8px',\n                                borderRadius: '4px',\n                                fontSize: '12px',\n                                whiteSpace: 'nowrap', // Prevent text from wrapping\n                            }}>\n                                Submit\n                            </div>\n                        )}                     \n                    </div>\n                </div>\n            </div>\n            {/* Sentiment Image Display */}\n            {sentimentImage && (\n                <div style={{\n                    position: 'fixed', // Change to fixed\n                    bottom: '0px', // Distance from the bottom\n                    left: '0px', // Distance from the left\n                    zIndex: 100, // Ensure it's above other components\n                }}>\n                    <img\n                        src={sentimentImage}\n                        alt=\"Sentiment\"\n                        style={{ width: '100%', height: '100%', objectFit: 'cover' }} // Adjust size as needed\n                    />\n                </div>\n            )}\n            {sentimentImage && (\n            <div style={{\n                position: 'fixed',\n                bottom: '10px', // Distance from the bottom\n                left: '200px', // Distance from the left\n                zIndex: 101, // Ensure it's above other components\n            }}>\n                <div\n                    style={{\n                        width: '200px', // Adjust width as needed\n                        height: '100px', // Adjust height as needed\n                        padding: '10px', // Padding for text area\n                        borderRadius: '5px', // Rounded corners\n                        border: '1px solid #ccc', // Border style\n                        backgroundColor: 'rgba(255, 255, 255, 0.8)', // Slightly transparent background\n                        fontSize: '16px', // Font size\n                        overflowY: 'auto', // Allow scrolling if content overflows\n                    }}\n                >\n                    {reply} {/* Display the reply; nothing shown if empty or null */}\n                </div>\n            </div>\n            )}\n        </div>\n    );\n};\n\nexport default AddData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
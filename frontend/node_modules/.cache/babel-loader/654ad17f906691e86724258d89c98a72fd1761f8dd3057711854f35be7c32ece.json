{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASISH1211\\\\Desktop\\\\PROJ\\\\LifeLens\\\\frontend\\\\src\\\\components\\\\AddData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Diary from \"../assets/opendiary2.png\";\nimport POSITIVEIMG from '../assets/POSITIVE.png'; // Image for positive sentiment\nimport NEGATIVEIMG from '../assets/NEGATIVE.png'; // Image for negative sentiment\nimport MIXEDIMG from '../assets/MIXED.png'; // Image for mixed sentiment\nimport NEUTRALIMG from '../assets/NEUTRAL.png'; // Image for neutral sentiment\nimport CLOUDIMG from '../assets/speechbubble.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddData = ({\n  setCurrentPage\n}) => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date()); // Initialize with current date\n  const [textValue, setTextValue] = useState(new Date().toLocaleDateString(undefined, {\n    day: '2-digit',\n    month: 'short',\n    year: 'numeric'\n  }));\n  const [image, setImage] = useState(null); // State to hold a single uploaded image\n  const [sentimentImage, setSentimentImage] = useState(null);\n  const [reply, setReply] = useState('');\n  const [entry, setEntry] = useState(''); // State to hold the diary text\n  const [existingEntry, setExistingEntry] = useState(null); // State to hold the existing entry (if any)\n  const imageInput = useRef(null);\n  const email = localStorage.getItem('email'); // Assuming email is stored in localStorage\n\n  const [hoveredButton, setHoveredButton] = useState(false); // Use a boolean for hover state\n\n  const handleMouseEnter = () => {\n    setHoveredButton(true);\n  };\n  const handleMouseLeave = () => {\n    setHoveredButton(false);\n  };\n\n  // Fetch existing entry when date changes\n  const fetchExistingEntry = async entryDate => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/diary/get-entry', {\n        params: {\n          entryDate,\n          email\n        }\n      });\n      const {\n        content,\n        imageUrl\n      } = response.data;\n\n      // Populate the form with the existing data\n      setEntry(content || '');\n      setImage(imageUrl ? await fetchImageFromUrl(imageUrl) : null);\n      setExistingEntry(response.data); // Store the fetched entry\n    } catch (error) {\n      console.log('No entry found for this date');\n      setEntry(''); // Clear the entry field if no entry exists\n      setImage(null); // Clear the image if no entry exists\n    }\n  };\n\n  // Helper to fetch image blob from the URL\n  const fetchImageFromUrl = async url => {\n    const response = await fetch(url);\n    const blob = await response.blob();\n    return new File([blob], \"existingImage\", {\n      type: blob.type\n    });\n  };\n\n  // Call fetchExistingEntry when the date changes\n  useEffect(() => {\n    const dateString = selectedDate.toISOString().substr(0, 10); // Format the date as YYYY-MM-DD\n    fetchExistingEntry(dateString);\n  }, [selectedDate]);\n\n  // Handle text area input change\n  const handleDataChange = event => {\n    setEntry(event.target.value); // Update entry state\n  };\n\n  // Handle date change\n  const handleDateChange = event => {\n    const newDate = new Date(event.target.value);\n    setSelectedDate(newDate);\n    setTextValue(newDate.toLocaleDateString(undefined, {\n      day: '2-digit',\n      month: 'short',\n      year: 'numeric'\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const entryId = `entry-${Date.now()}`; // Generate unique entry ID\n\n    let imageUrl = null;\n    if (image) {\n      try {\n        const formData = new FormData();\n        formData.append('image', image);\n        const uploadResponse = await axios.post('http://localhost:5000/api/diary/upload-image', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        imageUrl = uploadResponse.data.imageUrl;\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n\n    // Store or update the diary entry (with image URL if it was uploaded)\n    try {\n      await axios.post('http://localhost:5000/api/diary/add-entry', {\n        entryId: existingEntry ? existingEntry.entryId : entryId,\n        // Use existing entryId if updating\n        email,\n        entryDate: selectedDate.toISOString().substr(0, 10),\n        content: entry,\n        imageUrl // Store image URL in DynamoDB\n      });\n      console.log('Diary entry added/updated successfully');\n\n      // Check entry length and set reply and sentiment image accordingly\n      if (entry.length < 30) {\n        setReply(\"You could always say more\");\n        setSentimentImage(NEUTRALIMG); // Set neutral sentiment image\n        return; // Exit early since we don't need to fetch sentiment\n      }\n\n      // Fetch sentiment after adding/updating the entry using the new endpoint\n      const sentimentResponse = await axios.get('http://localhost:5000/api/diary/get-sentiment-by-email-and-date', {\n        params: {\n          entryDate: selectedDate.toISOString().substr(0, 10),\n          // Use the same date\n          email\n        }\n      });\n      if (sentimentResponse.status === 200) {\n        const {\n          sentiment,\n          randomReply\n        } = sentimentResponse.data;\n        console.log('Sentiment:', sentiment);\n        setReply(randomReply);\n        console.log(randomReply);\n        if (sentiment === 'POSITIVE') {\n          setSentimentImage(POSITIVEIMG);\n        } else if (sentiment === 'NEGATIVE') {\n          setSentimentImage(NEGATIVEIMG);\n        } else if (sentiment === 'MIXED') {\n          setSentimentImage(MIXEDIMG);\n        } else {\n          setSentimentImage(NEUTRALIMG);\n        }\n      }\n    } catch (error) {\n      console.error('Error adding/updating diary entry:', error);\n    }\n  };\n\n  // Handle image upload\n  const handleImageUpload = event => {\n    const file = event.target.files[0]; // Store only the first uploaded image file\n    if (file) {\n      setImage(file); // Update image state with the file\n    }\n  };\n  const triggerFileInput = () => {\n    imageInput.current.click(); // Trigger file input click when the div is clicked\n  };\n\n  // Button styles\n  const buttonStyle = {\n    cursor: 'pointer',\n    width: '184px',\n    height: '45px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: '1rem',\n    fontSize: '1.125em',\n    fontWeight: 800,\n    letterSpacing: '2px',\n    color: '#fff',\n    backgroundColor: '#644dff',\n    border: '2px solid #4836bb',\n    borderRadius: '0.75rem',\n    boxShadow: '0 8px 0 #4836bb',\n    transform: 'skew(-10deg)',\n    transition: 'all 0.1s ease',\n    filter: 'drop-shadow(0 15px 20px rgba(101, 77, 255, 0.39))',\n    marginTop: '-10px',\n    // Adjust to move up\n    marginRight: '10px'\n  };\n  const buttonHoverStyle = {\n    letterSpacing: '0px',\n    transform: 'skew(-10deg) translateY(8px)',\n    boxShadow: '0 0 0 rgba(101, 77, 255, 0.39)' // Update shadow color\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      paddingTop: '100px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '93%',\n        height: '60px',\n        display: 'flex',\n        marginLeft: '50px',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate.toISOString().substr(0, 10),\n        onChange: handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '803px',\n        height: '552.5px',\n        margin: 'auto',\n        padding: '20px',\n        backgroundImage: `url(${Diary})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '44%',\n            height: '510px',\n            marginLeft: '50px',\n            backgroundColor: 'transparent',\n            padding: '10px',\n            overflowY: 'auto' // Enable scrolling if content overflows\n          },\n          onClick: triggerFileInput // Trigger file input on click\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            ref: imageInput,\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            } // Hide the file input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(image),\n            alt: \"Diary\",\n            style: {\n              width: '100%',\n              height: '100%',\n              objectFit: 'contain'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '54%',\n            marginRight: '50px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            style: {\n              height: '250px',\n              width: '100%',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n              padding: '10px',\n              resize: 'none',\n              fontSize: '14px'\n            },\n            value: entry,\n            onChange: handleDataChange,\n            placeholder: \"Write your diary entry here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this), sentimentImage && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: sentimentImage,\n            alt: \"Sentiment\",\n            style: {\n              width: '50px',\n              height: '50px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onMouseEnter: handleMouseEnter,\n              onMouseLeave: handleMouseLeave,\n              onClick: handleSubmit,\n              style: {\n                ...buttonStyle,\n                ...(hoveredButton ? buttonHoverStyle : {}) // Apply hover styles if hovered\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 9\n  }, this);\n};\n_s(AddData, \"Wxa+gCYzzALR2jdgSdGetFXf5J4=\");\n_c = AddData;\nexport default AddData;\nvar _c;\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Diary","POSITIVEIMG","NEGATIVEIMG","MIXEDIMG","NEUTRALIMG","CLOUDIMG","jsxDEV","_jsxDEV","AddData","setCurrentPage","_s","selectedDate","setSelectedDate","Date","textValue","setTextValue","toLocaleDateString","undefined","day","month","year","image","setImage","sentimentImage","setSentimentImage","reply","setReply","entry","setEntry","existingEntry","setExistingEntry","imageInput","email","localStorage","getItem","hoveredButton","setHoveredButton","handleMouseEnter","handleMouseLeave","fetchExistingEntry","entryDate","response","get","params","content","imageUrl","data","fetchImageFromUrl","error","console","log","url","fetch","blob","File","type","dateString","toISOString","substr","handleDataChange","event","target","value","handleDateChange","newDate","handleSubmit","preventDefault","entryId","now","formData","FormData","append","uploadResponse","post","headers","length","sentimentResponse","status","sentiment","randomReply","handleImageUpload","file","files","triggerFileInput","current","click","buttonStyle","cursor","width","height","display","alignItems","justifyContent","gap","fontSize","fontWeight","letterSpacing","color","backgroundColor","border","borderRadius","boxShadow","transform","transition","filter","marginTop","marginRight","buttonHoverStyle","style","padding","paddingTop","children","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","onChange","margin","backgroundImage","backgroundPosition","backgroundSize","overflowY","onClick","accept","ref","src","URL","createObjectURL","alt","objectFit","resize","placeholder","onMouseEnter","onMouseLeave","_c","$RefreshReg$"],"sources":["C:/Users/VASISH1211/Desktop/PROJ/LifeLens/frontend/src/components/AddData.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Diary from \"../assets/opendiary2.png\";\nimport POSITIVEIMG from '../assets/POSITIVE.png'; // Image for positive sentiment\nimport NEGATIVEIMG from '../assets/NEGATIVE.png'; // Image for negative sentiment\nimport MIXEDIMG from '../assets/MIXED.png'; // Image for mixed sentiment\nimport NEUTRALIMG from '../assets/NEUTRAL.png'; // Image for neutral sentiment\nimport CLOUDIMG from '../assets/speechbubble.png';\n\nconst AddData = ({ setCurrentPage }) => {\n    const [selectedDate, setSelectedDate] = useState(new Date()); // Initialize with current date\n    const [textValue, setTextValue] = useState(new Date().toLocaleDateString(undefined, {\n        day: '2-digit',\n        month: 'short',\n        year: 'numeric'\n    }));\n    const [image, setImage] = useState(null); // State to hold a single uploaded image\n    const [sentimentImage, setSentimentImage] = useState(null);\n    const [reply, setReply] = useState('');\n    const [entry, setEntry] = useState(''); // State to hold the diary text\n    const [existingEntry, setExistingEntry] = useState(null); // State to hold the existing entry (if any)\n    const imageInput = useRef(null);\n    const email = localStorage.getItem('email'); // Assuming email is stored in localStorage\n\n    const [hoveredButton, setHoveredButton] = useState(false); // Use a boolean for hover state\n\n    const handleMouseEnter = () => {\n        setHoveredButton(true);\n    };\n\n    const handleMouseLeave = () => {\n        setHoveredButton(false);\n    };\n\n    // Fetch existing entry when date changes\n    const fetchExistingEntry = async (entryDate) => {\n        try {\n            const response = await axios.get('http://localhost:5000/api/diary/get-entry', {\n                params: { entryDate, email }\n            });\n            const { content, imageUrl } = response.data;\n\n            // Populate the form with the existing data\n            setEntry(content || '');\n            setImage(imageUrl ? await fetchImageFromUrl(imageUrl) : null);\n            setExistingEntry(response.data); // Store the fetched entry\n        } catch (error) {\n            console.log('No entry found for this date');\n            setEntry(''); // Clear the entry field if no entry exists\n            setImage(null); // Clear the image if no entry exists\n        }\n    };\n\n    // Helper to fetch image blob from the URL\n    const fetchImageFromUrl = async (url) => {\n        const response = await fetch(url);\n        const blob = await response.blob();\n        return new File([blob], \"existingImage\", { type: blob.type });\n    };\n\n    // Call fetchExistingEntry when the date changes\n    useEffect(() => {\n        const dateString = selectedDate.toISOString().substr(0, 10); // Format the date as YYYY-MM-DD\n        fetchExistingEntry(dateString);\n    }, [selectedDate]);\n\n    // Handle text area input change\n    const handleDataChange = (event) => {\n        setEntry(event.target.value); // Update entry state\n    };\n\n    // Handle date change\n    const handleDateChange = (event) => {\n        const newDate = new Date(event.target.value);\n        setSelectedDate(newDate);\n        setTextValue(newDate.toLocaleDateString(undefined, {\n            day: '2-digit',\n            month: 'short',\n            year: 'numeric'\n        }));\n    };\n\n    // Handle form submission\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const entryId = `entry-${Date.now()}`; // Generate unique entry ID\n\n        let imageUrl = null;\n        if (image) {\n            try {\n                const formData = new FormData();\n                formData.append('image', image);\n\n                const uploadResponse = await axios.post('http://localhost:5000/api/diary/upload-image', formData, {\n                    headers: { 'Content-Type': 'multipart/form-data' }\n                });\n                imageUrl = uploadResponse.data.imageUrl;\n            } catch (error) {\n                console.error('Error uploading image:', error);\n            }\n        }\n\n        // Store or update the diary entry (with image URL if it was uploaded)\n        try {\n            await axios.post('http://localhost:5000/api/diary/add-entry', {\n                entryId: existingEntry ? existingEntry.entryId : entryId, // Use existing entryId if updating\n                email,\n                entryDate: selectedDate.toISOString().substr(0, 10),\n                content: entry,\n                imageUrl, // Store image URL in DynamoDB\n            });\n            console.log('Diary entry added/updated successfully');\n\n            // Check entry length and set reply and sentiment image accordingly\n            if (entry.length < 30) {\n                setReply(\"You could always say more\");\n                setSentimentImage(NEUTRALIMG); // Set neutral sentiment image\n                return; // Exit early since we don't need to fetch sentiment\n            }\n\n            // Fetch sentiment after adding/updating the entry using the new endpoint\n            const sentimentResponse = await axios.get('http://localhost:5000/api/diary/get-sentiment-by-email-and-date', {\n                params: {\n                    entryDate: selectedDate.toISOString().substr(0, 10), // Use the same date\n                    email\n                }\n            });\n\n            if (sentimentResponse.status === 200) {\n                const { sentiment, randomReply } = sentimentResponse.data;\n                console.log('Sentiment:', sentiment);\n                setReply(randomReply);\n                console.log(randomReply);\n                if (sentiment === 'POSITIVE') {\n                    setSentimentImage(POSITIVEIMG);\n                } else if (sentiment === 'NEGATIVE') {\n                    setSentimentImage(NEGATIVEIMG);\n                } else if (sentiment === 'MIXED') {\n                    setSentimentImage(MIXEDIMG);\n                } else {\n                    setSentimentImage(NEUTRALIMG);\n                }\n            }\n        } catch (error) {\n            console.error('Error adding/updating diary entry:', error);\n        }\n    };\n\n    // Handle image upload\n    const handleImageUpload = (event) => {\n        const file = event.target.files[0]; // Store only the first uploaded image file\n        if (file) {\n            setImage(file); // Update image state with the file\n        }\n    };\n\n    const triggerFileInput = () => {\n        imageInput.current.click(); // Trigger file input click when the div is clicked\n    };\n\n    // Button styles\n    const buttonStyle = {\n        cursor: 'pointer',\n        width: '184px',\n        height: '45px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        gap: '1rem',\n        fontSize: '1.125em',\n        fontWeight: 800,\n        letterSpacing: '2px',\n        color: '#fff',\n        backgroundColor: '#644dff',\n        border: '2px solid #4836bb', \n        borderRadius: '0.75rem',\n        boxShadow: '0 8px 0 #4836bb',\n        transform: 'skew(-10deg)',\n        transition: 'all 0.1s ease',\n        filter: 'drop-shadow(0 15px 20px rgba(101, 77, 255, 0.39))',\n        marginTop: '-10px', // Adjust to move up\n        marginRight: '10px'\n    };\n\n    const buttonHoverStyle = {\n        letterSpacing: '0px',\n        transform: 'skew(-10deg) translateY(8px)',\n        boxShadow: '0 0 0 rgba(101, 77, 255, 0.39)', // Update shadow color\n    };\n\n    return (\n        <div style={{ padding: '20px', paddingTop: '100px' }}>\n            <div\n                style={{\n                    width: '93%',\n                    height: '60px',\n                    display: 'flex',\n                    marginLeft: '50px',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                }}\n            >\n                <label>Select Date:</label>\n                <input\n                    type=\"date\"\n                    value={selectedDate.toISOString().substr(0, 10)}\n                    onChange={handleDateChange}\n                />\n            </div>\n            <div\n                style={{\n                    width: '803px',\n                    height: '552.5px',\n                    margin: 'auto',\n                    padding: '20px',\n                    backgroundImage: `url(${Diary})`,\n                    backgroundPosition: 'center',\n                    backgroundSize: 'cover'\n                }}\n            >\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    {/* Left Div for Uploaded Image */}\n                    <div\n                        style={{\n                            width: '44%',\n                            height: '510px',\n                            marginLeft: '50px',\n                            backgroundColor: 'transparent',\n                            padding: '10px',\n                            overflowY: 'auto', // Enable scrolling if content overflows\n                        }}\n                        onClick={triggerFileInput} // Trigger file input on click\n                    >\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            ref={imageInput}\n                            onChange={handleImageUpload}\n                            style={{ display: 'none' }} // Hide the file input\n                        />\n                        {image && <img src={URL.createObjectURL(image)} alt=\"Diary\" style={{ width: '100%', height: '100%', objectFit: 'contain' }} />}\n                    </div>\n                    {/* Right Div for Diary Entry */}\n                    <div style={{ width: '54%', marginRight: '50px' }}>\n                        <textarea\n                            style={{\n                                height: '250px',\n                                width: '100%',\n                                border: '1px solid #ccc',\n                                borderRadius: '4px',\n                                padding: '10px',\n                                resize: 'none',\n                                fontSize: '14px',\n                            }}\n                            value={entry}\n                            onChange={handleDataChange}\n                            placeholder=\"Write your diary entry here...\"\n                        />\n                        {sentimentImage && (\n                            <img src={sentimentImage} alt=\"Sentiment\" style={{ width: '50px', height: '50px' }} />\n                        )}\n                        <div>\n                            <button\n                                onMouseEnter={handleMouseEnter}\n                                onMouseLeave={handleMouseLeave}\n                                onClick={handleSubmit}\n                                style={{\n                                    ...buttonStyle,\n                                    ...(hoveredButton ? buttonHoverStyle : {}) // Apply hover styles if hovered\n                                }}\n                            >\n                                Submit\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AddData;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,WAAW,MAAM,wBAAwB,CAAC,CAAC;AAClD,OAAOC,WAAW,MAAM,wBAAwB,CAAC,CAAC;AAClD,OAAOC,QAAQ,MAAM,qBAAqB,CAAC,CAAC;AAC5C,OAAOC,UAAU,MAAM,uBAAuB,CAAC,CAAC;AAChD,OAAOC,QAAQ,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAIiB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAIiB,IAAI,CAAC,CAAC,CAACG,kBAAkB,CAACC,SAAS,EAAE;IAChFC,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE;EACV,CAAC,CAAC,CAAC;EACH,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C,MAAM,CAAC2B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACiC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAMmC,UAAU,GAAGjC,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMkC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE7C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE3D,MAAMyC,gBAAgB,GAAGA,CAAA,KAAM;IAC3BD,gBAAgB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC3BF,gBAAgB,CAAC,KAAK,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMG,kBAAkB,GAAG,MAAOC,SAAS,IAAK;IAC5C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAM1C,KAAK,CAAC2C,GAAG,CAAC,2CAA2C,EAAE;QAC1EC,MAAM,EAAE;UAAEH,SAAS;UAAER;QAAM;MAC/B,CAAC,CAAC;MACF,MAAM;QAAEY,OAAO;QAAEC;MAAS,CAAC,GAAGJ,QAAQ,CAACK,IAAI;;MAE3C;MACAlB,QAAQ,CAACgB,OAAO,IAAI,EAAE,CAAC;MACvBtB,QAAQ,CAACuB,QAAQ,GAAG,MAAME,iBAAiB,CAACF,QAAQ,CAAC,GAAG,IAAI,CAAC;MAC7Df,gBAAgB,CAACW,QAAQ,CAACK,IAAI,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3CtB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MACdN,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB;EACJ,CAAC;;EAED;EACA,MAAMyB,iBAAiB,GAAG,MAAOI,GAAG,IAAK;IACrC,MAAMV,QAAQ,GAAG,MAAMW,KAAK,CAACD,GAAG,CAAC;IACjC,MAAME,IAAI,GAAG,MAAMZ,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClC,OAAO,IAAIC,IAAI,CAAC,CAACD,IAAI,CAAC,EAAE,eAAe,EAAE;MAAEE,IAAI,EAAEF,IAAI,CAACE;IAAK,CAAC,CAAC;EACjE,CAAC;;EAED;EACA1D,SAAS,CAAC,MAAM;IACZ,MAAM2D,UAAU,GAAG7C,YAAY,CAAC8C,WAAW,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC7DnB,kBAAkB,CAACiB,UAAU,CAAC;EAClC,CAAC,EAAE,CAAC7C,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMgD,gBAAgB,GAAIC,KAAK,IAAK;IAChChC,QAAQ,CAACgC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAClC,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIH,KAAK,IAAK;IAChC,MAAMI,OAAO,GAAG,IAAInD,IAAI,CAAC+C,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC5ClD,eAAe,CAACoD,OAAO,CAAC;IACxBjD,YAAY,CAACiD,OAAO,CAAChD,kBAAkB,CAACC,SAAS,EAAE;MAC/CC,GAAG,EAAE,SAAS;MACdC,KAAK,EAAE,OAAO;MACdC,IAAI,EAAE;IACV,CAAC,CAAC,CAAC;EACP,CAAC;;EAED;EACA,MAAM6C,YAAY,GAAG,MAAOL,KAAK,IAAK;IAClCA,KAAK,CAACM,cAAc,CAAC,CAAC;IACtB,MAAMC,OAAO,GAAG,SAAStD,IAAI,CAACuD,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;IAEvC,IAAIvB,QAAQ,GAAG,IAAI;IACnB,IAAIxB,KAAK,EAAE;MACP,IAAI;QACA,MAAMgD,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAElD,KAAK,CAAC;QAE/B,MAAMmD,cAAc,GAAG,MAAMzE,KAAK,CAAC0E,IAAI,CAAC,8CAA8C,EAAEJ,QAAQ,EAAE;UAC9FK,OAAO,EAAE;YAAE,cAAc,EAAE;UAAsB;QACrD,CAAC,CAAC;QACF7B,QAAQ,GAAG2B,cAAc,CAAC1B,IAAI,CAACD,QAAQ;MAC3C,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ;;IAEA;IACA,IAAI;MACA,MAAMjD,KAAK,CAAC0E,IAAI,CAAC,2CAA2C,EAAE;QAC1DN,OAAO,EAAEtC,aAAa,GAAGA,aAAa,CAACsC,OAAO,GAAGA,OAAO;QAAE;QAC1DnC,KAAK;QACLQ,SAAS,EAAE7B,YAAY,CAAC8C,WAAW,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;QACnDd,OAAO,EAAEjB,KAAK;QACdkB,QAAQ,CAAE;MACd,CAAC,CAAC;MACFI,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;;MAErD;MACA,IAAIvB,KAAK,CAACgD,MAAM,GAAG,EAAE,EAAE;QACnBjD,QAAQ,CAAC,2BAA2B,CAAC;QACrCF,iBAAiB,CAACpB,UAAU,CAAC,CAAC,CAAC;QAC/B,OAAO,CAAC;MACZ;;MAEA;MACA,MAAMwE,iBAAiB,GAAG,MAAM7E,KAAK,CAAC2C,GAAG,CAAC,iEAAiE,EAAE;QACzGC,MAAM,EAAE;UACJH,SAAS,EAAE7B,YAAY,CAAC8C,WAAW,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;UAAE;UACrD1B;QACJ;MACJ,CAAC,CAAC;MAEF,IAAI4C,iBAAiB,CAACC,MAAM,KAAK,GAAG,EAAE;QAClC,MAAM;UAAEC,SAAS;UAAEC;QAAY,CAAC,GAAGH,iBAAiB,CAAC9B,IAAI;QACzDG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE4B,SAAS,CAAC;QACpCpD,QAAQ,CAACqD,WAAW,CAAC;QACrB9B,OAAO,CAACC,GAAG,CAAC6B,WAAW,CAAC;QACxB,IAAID,SAAS,KAAK,UAAU,EAAE;UAC1BtD,iBAAiB,CAACvB,WAAW,CAAC;QAClC,CAAC,MAAM,IAAI6E,SAAS,KAAK,UAAU,EAAE;UACjCtD,iBAAiB,CAACtB,WAAW,CAAC;QAClC,CAAC,MAAM,IAAI4E,SAAS,KAAK,OAAO,EAAE;UAC9BtD,iBAAiB,CAACrB,QAAQ,CAAC;QAC/B,CAAC,MAAM;UACHqB,iBAAiB,CAACpB,UAAU,CAAC;QACjC;MACJ;IACJ,CAAC,CAAC,OAAO4C,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC9D;EACJ,CAAC;;EAED;EACA,MAAMgC,iBAAiB,GAAIpB,KAAK,IAAK;IACjC,MAAMqB,IAAI,GAAGrB,KAAK,CAACC,MAAM,CAACqB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,IAAID,IAAI,EAAE;MACN3D,QAAQ,CAAC2D,IAAI,CAAC,CAAC,CAAC;IACpB;EACJ,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC3BpD,UAAU,CAACqD,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;;EAED;EACA,MAAMC,WAAW,GAAG;IAChBC,MAAM,EAAE,SAAS;IACjBC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,GAAG,EAAE,MAAM;IACXC,QAAQ,EAAE,SAAS;IACnBC,UAAU,EAAE,GAAG;IACfC,aAAa,EAAE,KAAK;IACpBC,KAAK,EAAE,MAAM;IACbC,eAAe,EAAE,SAAS;IAC1BC,MAAM,EAAE,mBAAmB;IAC3BC,YAAY,EAAE,SAAS;IACvBC,SAAS,EAAE,iBAAiB;IAC5BC,SAAS,EAAE,cAAc;IACzBC,UAAU,EAAE,eAAe;IAC3BC,MAAM,EAAE,mDAAmD;IAC3DC,SAAS,EAAE,OAAO;IAAE;IACpBC,WAAW,EAAE;EACjB,CAAC;EAED,MAAMC,gBAAgB,GAAG;IACrBX,aAAa,EAAE,KAAK;IACpBM,SAAS,EAAE,8BAA8B;IACzCD,SAAS,EAAE,gCAAgC,CAAE;EACjD,CAAC;EAED,oBACI9F,OAAA;IAAKqG,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBACjDxG,OAAA;MACIqG,KAAK,EAAE;QACHpB,KAAK,EAAE,KAAK;QACZC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE,MAAM;QACfsB,UAAU,EAAE,MAAM;QAClBpB,cAAc,EAAE,QAAQ;QACxBD,UAAU,EAAE;MAChB,CAAE;MAAAoB,QAAA,gBAEFxG,OAAA;QAAAwG,QAAA,EAAO;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3B7G,OAAA;QACIgD,IAAI,EAAC,MAAM;QACXO,KAAK,EAAEnD,YAAY,CAAC8C,WAAW,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAE;QAChD2D,QAAQ,EAAEtD;MAAiB;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACN7G,OAAA;MACIqG,KAAK,EAAE;QACHpB,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,SAAS;QACjB6B,MAAM,EAAE,MAAM;QACdT,OAAO,EAAE,MAAM;QACfU,eAAe,EAAE,OAAOvH,KAAK,GAAG;QAChCwH,kBAAkB,EAAE,QAAQ;QAC5BC,cAAc,EAAE;MACpB,CAAE;MAAAV,QAAA,eAEFxG,OAAA;QAAKqG,KAAK,EAAE;UAAElB,OAAO,EAAE,MAAM;UAAEE,cAAc,EAAE;QAAgB,CAAE;QAAAmB,QAAA,gBAE7DxG,OAAA;UACIqG,KAAK,EAAE;YACHpB,KAAK,EAAE,KAAK;YACZC,MAAM,EAAE,OAAO;YACfuB,UAAU,EAAE,MAAM;YAClBd,eAAe,EAAE,aAAa;YAC9BW,OAAO,EAAE,MAAM;YACfa,SAAS,EAAE,MAAM,CAAE;UACvB,CAAE;UACFC,OAAO,EAAExC,gBAAiB,CAAC;UAAA;UAAA4B,QAAA,gBAE3BxG,OAAA;YACIgD,IAAI,EAAC,MAAM;YACXqE,MAAM,EAAC,SAAS;YAChBC,GAAG,EAAE9F,UAAW;YAChBsF,QAAQ,EAAErC,iBAAkB;YAC5B4B,KAAK,EAAE;cAAElB,OAAO,EAAE;YAAO,CAAE,CAAC;UAAA;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,EACD/F,KAAK,iBAAId,OAAA;YAAKuH,GAAG,EAAEC,GAAG,CAACC,eAAe,CAAC3G,KAAK,CAAE;YAAC4G,GAAG,EAAC,OAAO;YAACrB,KAAK,EAAE;cAAEpB,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE,MAAM;cAAEyC,SAAS,EAAE;YAAU;UAAE;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7H,CAAC,eAEN7G,OAAA;UAAKqG,KAAK,EAAE;YAAEpB,KAAK,EAAE,KAAK;YAAEkB,WAAW,EAAE;UAAO,CAAE;UAAAK,QAAA,gBAC9CxG,OAAA;YACIqG,KAAK,EAAE;cACHnB,MAAM,EAAE,OAAO;cACfD,KAAK,EAAE,MAAM;cACbW,MAAM,EAAE,gBAAgB;cACxBC,YAAY,EAAE,KAAK;cACnBS,OAAO,EAAE,MAAM;cACfsB,MAAM,EAAE,MAAM;cACdrC,QAAQ,EAAE;YACd,CAAE;YACFhC,KAAK,EAAEnC,KAAM;YACb0F,QAAQ,EAAE1D,gBAAiB;YAC3ByE,WAAW,EAAC;UAAgC;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC,EACD7F,cAAc,iBACXhB,OAAA;YAAKuH,GAAG,EAAEvG,cAAe;YAAC0G,GAAG,EAAC,WAAW;YAACrB,KAAK,EAAE;cAAEpB,KAAK,EAAE,MAAM;cAAEC,MAAM,EAAE;YAAO;UAAE;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CACxF,eACD7G,OAAA;YAAAwG,QAAA,eACIxG,OAAA;cACI8H,YAAY,EAAEhG,gBAAiB;cAC/BiG,YAAY,EAAEhG,gBAAiB;cAC/BqF,OAAO,EAAE1D,YAAa;cACtB2C,KAAK,EAAE;gBACH,GAAGtB,WAAW;gBACd,IAAInD,aAAa,GAAGwE,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;cAC/C,CAAE;cAAAI,QAAA,EACL;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC1G,EAAA,CA9QIF,OAAO;AAAA+H,EAAA,GAAP/H,OAAO;AAgRb,eAAeA,OAAO;AAAC,IAAA+H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASISH1211\\\\Desktop\\\\PROJ\\\\LifeLens\\\\frontend\\\\src\\\\components\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\n\n// Provider component\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // State for background color and font family\n  const [backgroundColor, setBackgroundColor] = useState(\"#ffffff\");\n  const [fontFamily, setFontFamily] = useState(\"Arial, sans-serif\");\n  const changeBackgroundColor = color => {\n    setBackgroundColor(color);\n  };\n  const changeFontFamily = font => {\n    setFontFamily(font);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      backgroundColor,\n      fontFamily,\n      changeBackgroundColor,\n      changeFontFamily\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use theme context\n_s(ThemeProvider, \"AAkHghLoSQTxVE6IddWsC7jldjI=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  return useContext(ThemeContext);\n};\n_s2(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","backgroundColor","setBackgroundColor","fontFamily","setFontFamily","changeBackgroundColor","color","changeFontFamily","font","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","$RefreshReg$"],"sources":["C:/Users/VASISH1211/Desktop/PROJ/LifeLens/frontend/src/components/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\n// Create the context\r\nconst ThemeContext = createContext();\r\n\r\n// Provider component\r\nexport const ThemeProvider = ({ children }) => {\r\n  // State for background color and font family\r\n  const [backgroundColor, setBackgroundColor] = useState(\"#ffffff\");\r\n  const [fontFamily, setFontFamily] = useState(\"Arial, sans-serif\");\r\n\r\n  const changeBackgroundColor = (color) => {\r\n    setBackgroundColor(color);\r\n  };\r\n\r\n  const changeFontFamily = (font) => {\r\n    setFontFamily(font);\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{\r\n        backgroundColor,\r\n        fontFamily,\r\n        changeBackgroundColor,\r\n        changeFontFamily,\r\n      }}\r\n    >\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use theme context\r\nexport const useTheme = () => useContext(ThemeContext);\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;;AAEpC;AACA,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,SAAS,CAAC;EACjE,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,mBAAmB,CAAC;EAEjE,MAAMY,qBAAqB,GAAIC,KAAK,IAAK;IACvCJ,kBAAkB,CAACI,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;IACjCJ,aAAa,CAACI,IAAI,CAAC;EACrB,CAAC;EAED,oBACEZ,OAAA,CAACC,YAAY,CAACY,QAAQ;IACpBC,KAAK,EAAE;MACLT,eAAe;MACfE,UAAU;MACVE,qBAAqB;MACrBE;IACF,CAAE;IAAAR,QAAA,EAEDA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAAd,EAAA,CA3BaF,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AA4B1B,OAAO,MAAMkB,QAAQ,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvB,UAAU,CAACG,YAAY,CAAC;AAAA;AAACoB,GAAA,CAA1CD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
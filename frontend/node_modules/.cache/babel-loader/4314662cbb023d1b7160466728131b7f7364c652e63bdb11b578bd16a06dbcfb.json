{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASISH1211\\\\Desktop\\\\PROJ\\\\LifeLens\\\\frontend\\\\src\\\\components\\\\AddData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Diary from \"../assets/opendiary2.png\";\nimport POSITIVEIMG from '../assets/POSITIVE.png';\nimport NEGATIVEIMG from '../assets/NEGATIVE.png';\nimport MIXEDIMG from '../assets/MIXED.png';\nimport NEUTRALIMG from '../assets/NEUTRAL.png';\nimport save from '../assets/save.png';\nimport imgup from '../assets/imgup.png';\nimport mic from '../assets/mic.png';\nimport translate from '../assets/translate.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddData = ({\n  setCurrentPage\n}) => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date()); // Initialize with current date\n  const [textValue, setTextValue] = useState(new Date().toLocaleDateString(undefined, {\n    day: '2-digit',\n    month: 'short',\n    year: 'numeric'\n  }));\n  const [image, setImage] = useState(null); // State to hold a single uploaded image\n  const [sentimentImage, setSentimentImage] = useState(null);\n  const [reply, setReply] = useState('');\n  const [entry, setEntry] = useState(''); // State to hold the diary text\n  const [existingEntry, setExistingEntry] = useState(null); // State to hold the existing entry (if any)\n  const imageInput = useRef(null);\n  const email = localStorage.getItem('email'); // Assuming email is stored in localStorage\n  const [showSubmit, setShowSubmit] = useState(false);\n  const [showTranslate, setShowTranslate] = useState(false);\n  const [showMic, setShowMic] = useState(false); // eslint-disable-next-line no-unused-vars\n  const [audioFile, setAudioFile] = useState(null); // eslint-disable-next-line no-unused-vars\n  const [errorMessage, setErrorMessage] = useState('');\n  const [recording, setRecording] = useState(false);\n  const [timer, setTimer] = useState(0);\n  const formatTime = timeInSeconds => {\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = timeInSeconds % 60;\n    return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n  };\n  const handleTranslate = async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/translate\", {\n        text: entry\n      });\n      setEntry(response.data.translatedText);\n    } catch (error) {\n      console.error(\"Translation error:\", error);\n    }\n  };\n  const [mediaRecorder, setMediaRecorder] = useState(null); // Store MediaRecorder instance\n\n  const handleToggleRecording = async () => {\n    if (recording) {\n      // Stop recording\n      mediaRecorder.stop();\n      setRecording(false);\n    } else {\n      // Start recording\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const newMediaRecorder = new MediaRecorder(stream);\n      const audioChunks = [];\n      newMediaRecorder.ondataavailable = event => {\n        audioChunks.push(event.data);\n      };\n      newMediaRecorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/m4a'\n        });\n        const file = new File([audioBlob], 'recording.m4a', {\n          type: 'audio/m4a'\n        });\n        setAudioFile(file);\n        await uploadAudio(file);\n      };\n      newMediaRecorder.start();\n      setMediaRecorder(newMediaRecorder); // Store the MediaRecorder instance\n      setRecording(true);\n    }\n  };\n  useEffect(() => {\n    let intervalId;\n    if (recording) {\n      intervalId = setInterval(() => {\n        setTimer(prevTime => prevTime + 1);\n      }, 1000);\n    } else {\n      clearInterval(intervalId);\n      setTimer(0); // Reset the timer when stopping\n    }\n    return () => clearInterval(intervalId);\n  }, [recording]);\n  const uploadAudio = async file => {\n    const formData = new FormData();\n    formData.append('audio', file);\n    try {\n      const response = await axios.post('http://localhost:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      await checkTranscriptionStatus(response.data.jobName);\n    } catch (error) {\n      console.error('Error uploading audio:', error);\n      setErrorMessage('Failed to upload audio. Please try again.');\n    }\n  };\n  const checkTranscriptionStatus = async jobName => {\n    const interval = setInterval(async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/transcription-status/${jobName}`);\n        const {\n          TranscriptionJob\n        } = response.data;\n        if (TranscriptionJob.TranscriptionJobStatus === 'COMPLETED') {\n          clearInterval(interval);\n          const transcriptUri = TranscriptionJob.Transcript.TranscriptFileUri;\n          await fetchTranscriptionText(transcriptUri); // Fetch the transcription text\n        } else if (TranscriptionJob.TranscriptionJobStatus === 'FAILED') {\n          clearInterval(interval);\n          setErrorMessage('Transcription job failed.');\n          console.error('Transcription job failed');\n        }\n      } catch (error) {\n        console.error('Error checking transcription status:', error);\n        setErrorMessage('Error checking transcription status. Please try again.');\n        clearInterval(interval);\n      }\n    }, 5000); // Check status every 5 seconds\n  };\n  const fetchTranscriptionText = async transcriptUri => {\n    try {\n      const transcriptResponse = await axios.get(transcriptUri);\n      const text = transcriptResponse.data.results.transcripts[0].transcript;\n      setEntry(text);\n    } catch (error) {\n      console.error('Error fetching transcription text:', error);\n      setErrorMessage('Error fetching transcription text. Please try again.');\n    }\n  };\n  //==================================================================\n  // Fetch existing entry when date changes\n  const fetchExistingEntry = async entryDate => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/diary/get-entry', {\n        params: {\n          entryDate,\n          email\n        }\n      });\n      const {\n        content,\n        imageUrl\n      } = response.data;\n\n      // Populate the form with the existing data\n      setEntry(content || '');\n      setImage(imageUrl ? await fetchImageFromUrl(imageUrl) : null);\n      setExistingEntry(response.data); // Store the fetched entry\n    } catch (error) {\n      console.log('No entry found for this date');\n      setEntry(''); // Clear the entry field if no entry exists\n      setImage(null); // Clear the image if no entry exists\n    }\n  };\n\n  // Helper to fetch image blob from the URL\n  const fetchImageFromUrl = async url => {\n    const response = await fetch(url);\n    const blob = await response.blob();\n    return new File([blob], \"existingImage\", {\n      type: blob.type\n    });\n  };\n\n  // Call fetchExistingEntry when the date changes\n  useEffect(() => {\n    const dateString = selectedDate.toISOString().substr(0, 10); // Format the date as YYYY-MM-DD\n    fetchExistingEntry(dateString); // eslint-disable-next-line\n  }, [selectedDate]);\n\n  // Handle text area input change\n  const handleDataChange = event => {\n    setEntry(event.target.value); // Update entry state\n  };\n\n  // Handle date change\n  const handleDateChange = event => {\n    const newDate = new Date(event.target.value);\n    setSelectedDate(newDate);\n    setTextValue(newDate.toLocaleDateString(undefined, {\n      day: '2-digit',\n      month: 'short',\n      year: 'numeric'\n    }));\n  };\n  const [imageVisible, setImageVisible] = useState(false); // State for controlling image visibility\n\n  useEffect(() => {\n    // If sentimentImage is set, start a timer to hide it after 10 seconds\n    if (imageVisible) {\n      const timer = setTimeout(() => {\n        setSentimentImage(null); // Hide the sentiment image after 10 seconds\n        setImageVisible(false); // Hide the image\n      }, 10000); // 10 seconds delay\n\n      // Cleanup function to clear the timeout if the component is unmounted or image is reset earlier\n      return () => clearTimeout(timer);\n    }\n  }, [imageVisible]); // Run when imageVisible changes\n  // Handle form submission\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const entryId = `entry-${Date.now()}`; // Generate unique entry ID\n\n    let imageUrl = null;\n    if (image) {\n      try {\n        const formData = new FormData();\n        formData.append('image', image);\n        const uploadResponse = await axios.post('http://localhost:5000/api/diary/upload-image', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        imageUrl = uploadResponse.data.imageUrl;\n      } catch (error) {\n        console.error('Error uploading image:', error);\n      }\n    }\n\n    // Store or update the diary entry (with image URL if it was uploaded)\n    try {\n      await axios.post('http://localhost:5000/api/diary/add-entry', {\n        entryId: existingEntry ? existingEntry.entryId : entryId,\n        // Use existing entryId if updating\n        email,\n        entryDate: selectedDate.toISOString().substr(0, 10),\n        content: entry,\n        imageUrl // Store image URL in DynamoDB\n      });\n      console.log('Diary entry added/updated successfully');\n\n      // Check entry length and set reply and sentiment image accordingly\n      if (entry.length < 20) {\n        setReply(\"You could always say more\");\n        setSentimentImage(NEUTRALIMG); // Set neutral sentiment image\n        return; // Exit early since we don't need to fetch sentiment\n      }\n\n      // Fetch sentiment after adding/updating the entry using the new endpoint\n      const sentimentResponse = await axios.get('http://localhost:5000/api/diary/get-sentiment-by-email-and-date', {\n        params: {\n          entryDate: selectedDate.toISOString().substr(0, 10),\n          // Use the same date\n          email\n        }\n      });\n      if (sentimentResponse.status === 200) {\n        const {\n          sentiment,\n          randomReply\n        } = sentimentResponse.data;\n        console.log('Sentiment:', sentiment);\n        setReply(randomReply);\n        console.log(randomReply);\n        if (sentiment === 'POSITIVE') {\n          setSentimentImage(POSITIVEIMG);\n        } else if (sentiment === 'NEGATIVE') {\n          setSentimentImage(NEGATIVEIMG);\n        } else if (sentiment === 'MIXED') {\n          setSentimentImage(MIXEDIMG);\n        } else {\n          setSentimentImage(NEUTRALIMG);\n        }\n      }\n      setImageVisible(true);\n    } catch (error) {\n      console.error('Error adding/updating diary entry:', error);\n    }\n  };\n\n  // Handle image upload\n  const handleImageUpload = event => {\n    const file = event.target.files[0]; // Store only the first uploaded image file\n    if (file) {\n      setImage(file); // Update image state with the file\n    }\n  };\n  const triggerFileInput = () => {\n    imageInput.current.click(); // Trigger file input click when the div is clicked\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      paddingTop: '100px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '93%',\n        height: '60px',\n        display: 'flex',\n        marginLeft: '50px',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          cursor: 'pointer',\n          width: '360px',\n          height: '50px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          gap: '1rem',\n          fontSize: '1.125em',\n          fontWeight: 700,\n          letterSpacing: '2px',\n          color: 'black',\n          backgroundColor: '#644dff',\n          border: '2px solid #4836bb',\n          borderRadius: '0.75rem',\n          boxShadow: '0 8px 0 #4836bb',\n          transition: 'all 0.1s ease',\n          filter: 'drop-shadow(0 15px 20px rgba(101, 77, 255, 0.39))',\n          marginTop: '-30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            color: 'white',\n            marginRight: '10px',\n            marginTop: '5px'\n          },\n          children: \"Select Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: selectedDate.toISOString().substr(0, 10),\n          onChange: handleDateChange,\n          style: {\n            backgroundColor: '#644dff',\n            borderRadius: '10px',\n            color: 'white',\n            fontWeight: '700',\n            height: '40px',\n            width: '150px',\n            paddingLeft: '10px',\n            paddingRight: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '803px',\n        height: '552.5px',\n        margin: 'auto',\n        padding: '20px',\n        backgroundImage: `url(${Diary})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '44%',\n            height: '510px',\n            marginLeft: '50px',\n            backgroundColor: 'transparent',\n            padding: '10px',\n            overflow: 'hidden',\n            display: 'flex',\n            // Added to enable flexbox centering\n            alignItems: 'center',\n            // Vertically center the image\n            justifyContent: 'center' // Horizontally center the image\n          },\n          onClick: triggerFileInput // Trigger file input on click\n          ,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            ref: imageInput,\n            onChange: handleImageUpload,\n            style: {\n              display: 'none'\n            } // Hide file input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this), image ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: URL.createObjectURL(image) // Generate a URL for the selected image\n            ,\n            alt: \"Uploaded\",\n            style: {\n              maxWidth: '100%',\n              maxHeight: '100%',\n              marginBottom: '10px'\n            } // Show the selected image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 29\n          }, this) :\n          /*#__PURE__*/\n          // <p style={{ color: 'grey' }}>Click to upload image</p>\n          _jsxDEV(\"img\", {\n            src: imgup,\n            alt: \"imgup\",\n            style: {\n              width: '50px',\n              height: '50px',\n              cursor: 'pointer'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '47%',\n            height: '490px',\n            marginTop: '5px',\n            marginRight: '5px',\n            backgroundColor: 'transparent',\n            padding: '10px',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginRight: '10px',\n              color: 'black',\n              fontWeight: 600\n            },\n            children: textValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            style: {\n              height: '100%',\n              width: '100%',\n              padding: '10px',\n              border: 'none',\n              outline: 'none',\n              resize: 'none',\n              boxSizing: 'border-box',\n              backgroundColor: 'transparent',\n              fontFamily: 'Dancing Script, cursive',\n              overflow: 'hidden'\n            },\n            value: entry,\n            onChange: handleDataChange,\n            spellCheck: \"false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: save,\n            alt: \"save\",\n            style: {\n              boxShadow: '0 0 5px #4836bb',\n              width: '30px',\n              height: '30px',\n              position: 'absolute',\n              bottom: '0',\n              // Position at the bottom\n              right: '70px',\n              // Position at the right\n              cursor: 'pointer'\n            },\n            onClick: handleSubmit // Trigger save action on click\n            ,\n            onMouseEnter: () => setShowSubmit(true),\n            onMouseLeave: () => setShowSubmit(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }, this), showSubmit && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              bottom: '40px',\n              // Adjust to position above the icon\n              right: '0',\n              backgroundColor: '#333',\n              color: '#fff',\n              padding: '5px 8px',\n              borderRadius: '4px',\n              fontSize: '12px',\n              whiteSpace: 'nowrap' // Prevent text from wrapping\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: translate,\n            alt: \"translate\",\n            style: {\n              width: '35px',\n              height: '35px',\n              position: 'absolute',\n              bottom: '-1px',\n              // Position at the bottom\n              right: '160px',\n              // Position at the right\n              cursor: 'pointer'\n            },\n            onClick: handleTranslate,\n            onMouseEnter: () => setShowTranslate(true),\n            onMouseLeave: () => setShowTranslate(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 25\n          }, this), showTranslate && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              bottom: '40px',\n              // Adjust to position above the icon\n              right: '275px',\n              backgroundColor: '#333',\n              color: '#fff',\n              padding: '5px 8px',\n              borderRadius: '4px',\n              fontSize: '12px',\n              whiteSpace: 'nowrap' // Prevent text from wrapping\n            },\n            children: \"Translate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: mic,\n            alt: \"mic\",\n            style: {\n              width: '30px',\n              height: '30px',\n              position: 'absolute',\n              bottom: '0',\n              // Position at the bottom\n              right: '250px',\n              // Position at the right\n              cursor: 'pointer',\n              backgroundColor: recording ? 'red' : 'transparent',\n              borderRadius: '10px'\n            },\n            onClick: handleToggleRecording,\n            onMouseEnter: () => setShowMic(true),\n            onMouseLeave: () => setShowMic(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 25\n          }, this), recording && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '24px',\n              fontWeight: 'bold',\n              width: '30px',\n              height: '30px',\n              position: 'absolute',\n              bottom: '15px',\n              // Position at the bottom\n              right: '270px'\n            },\n            children: formatTime(timer)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 25\n          }, this), showMic && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              bottom: '40px',\n              // Adjust to position above the icon\n              right: '275px',\n              backgroundColor: '#333',\n              color: '#fff',\n              padding: '5px 8px',\n              borderRadius: '4px',\n              fontSize: '12px',\n              whiteSpace: 'nowrap' // Prevent text from wrapping\n            },\n            children: recording ? 'Stop Recording' : 'Start Recording'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }, this), sentimentImage && imageVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        // Change to fixed\n        bottom: '0px',\n        // Distance from the bottom\n        left: '0px',\n        // Distance from the left\n        zIndex: 100 // Ensure it's above other components\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: sentimentImage,\n        alt: \"Sentiment\",\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover'\n        } // Adjust size as needed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 17\n    }, this), sentimentImage && imageVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: '10px',\n        // Distance from the bottom\n        left: '200px',\n        // Distance from the left\n        zIndex: 101 // Ensure it's above other components\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '200px',\n          // Adjust width as needed\n          height: '100px',\n          // Adjust height as needed\n          padding: '10px',\n          // Padding for text area\n          borderRadius: '5px',\n          // Rounded corners\n          border: '1px solid #ccc',\n          // Border style\n          backgroundColor: 'rgba(255, 255, 255, 0.8)',\n          // Slightly transparent background\n          fontSize: '16px',\n          // Font size\n          overflowY: 'auto' // Allow scrolling if content overflows\n        },\n        children: [reply, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 9\n  }, this);\n};\n_s(AddData, \"xczvI95341/+mUWOKC+pYrUQr/g=\");\n_c = AddData;\nexport default AddData;\nvar _c;\n$RefreshReg$(_c, \"AddData\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Diary","POSITIVEIMG","NEGATIVEIMG","MIXEDIMG","NEUTRALIMG","save","imgup","mic","translate","jsxDEV","_jsxDEV","AddData","setCurrentPage","_s","selectedDate","setSelectedDate","Date","textValue","setTextValue","toLocaleDateString","undefined","day","month","year","image","setImage","sentimentImage","setSentimentImage","reply","setReply","entry","setEntry","existingEntry","setExistingEntry","imageInput","email","localStorage","getItem","showSubmit","setShowSubmit","showTranslate","setShowTranslate","showMic","setShowMic","audioFile","setAudioFile","errorMessage","setErrorMessage","recording","setRecording","timer","setTimer","formatTime","timeInSeconds","minutes","Math","floor","seconds","String","padStart","handleTranslate","response","post","text","data","translatedText","error","console","mediaRecorder","setMediaRecorder","handleToggleRecording","stop","stream","navigator","mediaDevices","getUserMedia","audio","newMediaRecorder","MediaRecorder","audioChunks","ondataavailable","event","push","onstop","audioBlob","Blob","type","file","File","uploadAudio","start","intervalId","setInterval","prevTime","clearInterval","formData","FormData","append","headers","checkTranscriptionStatus","jobName","interval","get","TranscriptionJob","TranscriptionJobStatus","transcriptUri","Transcript","TranscriptFileUri","fetchTranscriptionText","transcriptResponse","results","transcripts","transcript","fetchExistingEntry","entryDate","params","content","imageUrl","fetchImageFromUrl","log","url","fetch","blob","dateString","toISOString","substr","handleDataChange","target","value","handleDateChange","newDate","imageVisible","setImageVisible","setTimeout","clearTimeout","handleSubmit","preventDefault","entryId","now","uploadResponse","length","sentimentResponse","status","sentiment","randomReply","handleImageUpload","files","triggerFileInput","current","click","style","padding","paddingTop","children","width","height","display","marginLeft","justifyContent","alignItems","cursor","gap","fontSize","fontWeight","letterSpacing","color","backgroundColor","border","borderRadius","boxShadow","transition","filter","marginTop","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","onChange","paddingLeft","paddingRight","margin","backgroundImage","backgroundPosition","backgroundSize","overflow","onClick","accept","ref","src","URL","createObjectURL","alt","maxWidth","maxHeight","marginBottom","position","outline","resize","boxSizing","fontFamily","spellCheck","bottom","right","onMouseEnter","onMouseLeave","whiteSpace","left","zIndex","objectFit","overflowY","_c","$RefreshReg$"],"sources":["C:/Users/VASISH1211/Desktop/PROJ/LifeLens/frontend/src/components/AddData.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Diary from \"../assets/opendiary2.png\";\nimport POSITIVEIMG from '../assets/POSITIVE.png'; \nimport NEGATIVEIMG from '../assets/NEGATIVE.png'; \nimport MIXEDIMG from '../assets/MIXED.png';\nimport NEUTRALIMG from '../assets/NEUTRAL.png'; \nimport save from '../assets/save.png';\nimport imgup from '../assets/imgup.png';\nimport mic from '../assets/mic.png';\nimport translate from '../assets/translate.png';\n\nconst AddData = ({ setCurrentPage }) => {\n    const [selectedDate, setSelectedDate] = useState(new Date()); // Initialize with current date\n    const [textValue, setTextValue] = useState(new Date().toLocaleDateString(undefined, {\n        day: '2-digit',\n        month: 'short',\n        year: 'numeric'\n    }));\n    const [image, setImage] = useState(null); // State to hold a single uploaded image\n    const [sentimentImage, setSentimentImage] = useState(null);\n    const [reply, setReply] = useState('');\n    const [entry, setEntry] = useState(''); // State to hold the diary text\n    const [existingEntry, setExistingEntry] = useState(null); // State to hold the existing entry (if any)\n    const imageInput = useRef(null);\n    const email = localStorage.getItem('email'); // Assuming email is stored in localStorage\n    const [showSubmit, setShowSubmit] = useState(false);\n    const [showTranslate, setShowTranslate] = useState(false);\n    const [showMic, setShowMic] = useState(false); // eslint-disable-next-line no-unused-vars\n    const [audioFile, setAudioFile] = useState(null);// eslint-disable-next-line no-unused-vars\n    const [errorMessage, setErrorMessage] = useState('');\n    const [recording, setRecording] = useState(false);\n    const [timer, setTimer] = useState(0);\n    const formatTime = (timeInSeconds) => {\n        const minutes = Math.floor(timeInSeconds / 60);\n        const seconds = timeInSeconds % 60;\n        return `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n    };\n\n\n    const handleTranslate = async () => {\n        try {\n        const response = await axios.post(\"http://localhost:5000/api/translate\", { text: entry });\n        setEntry(response.data.translatedText);\n        } catch (error) {\n        console.error(\"Translation error:\", error);\n        }\n    }\n    const [mediaRecorder, setMediaRecorder] = useState(null); // Store MediaRecorder instance\n\n    const handleToggleRecording = async () => {\n        if (recording) {\n            // Stop recording\n            mediaRecorder.stop();\n            setRecording(false);\n        } else {\n            // Start recording\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            const newMediaRecorder = new MediaRecorder(stream);\n            const audioChunks = [];\n\n            newMediaRecorder.ondataavailable = (event) => {\n                audioChunks.push(event.data);\n            };\n\n            newMediaRecorder.onstop = async () => {\n                const audioBlob = new Blob(audioChunks, { type: 'audio/m4a' });\n                const file = new File([audioBlob], 'recording.m4a', { type: 'audio/m4a' });\n                setAudioFile(file);\n                await uploadAudio(file);\n            };\n\n            newMediaRecorder.start();\n            setMediaRecorder(newMediaRecorder); // Store the MediaRecorder instance\n            setRecording(true);\n        }\n    };\n\n    useEffect(() => {\n        let intervalId;\n        if (recording) {\n            intervalId = setInterval(() => {\n              setTimer((prevTime) => prevTime + 1);\n            }, 1000);\n        }   else {\n            clearInterval(intervalId);\n            setTimer(0); // Reset the timer when stopping\n          }\n          return () => clearInterval(intervalId);\n        }, [recording]);\n\n    const uploadAudio = async (file) => {\n        const formData = new FormData();\n        formData.append('audio', file);\n        \n        try {\n            const response = await axios.post('http://localhost:5000/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n            await checkTranscriptionStatus(response.data.jobName);\n        } catch (error) {\n            console.error('Error uploading audio:', error);\n            setErrorMessage('Failed to upload audio. Please try again.');\n        }\n    };\n\n    const checkTranscriptionStatus = async (jobName) => {\n        const interval = setInterval(async () => {\n            try {\n                const response = await axios.get(`http://localhost:5000/transcription-status/${jobName}`);\n                const { TranscriptionJob } = response.data;\n                if (TranscriptionJob.TranscriptionJobStatus === 'COMPLETED') {\n                    clearInterval(interval);\n                    const transcriptUri = TranscriptionJob.Transcript.TranscriptFileUri;\n                    await fetchTranscriptionText(transcriptUri); // Fetch the transcription text\n                } else if (TranscriptionJob.TranscriptionJobStatus === 'FAILED') {\n                    clearInterval(interval);\n                    setErrorMessage('Transcription job failed.');\n                    console.error('Transcription job failed');\n                }\n            } catch (error) {\n                console.error('Error checking transcription status:', error);\n                setErrorMessage('Error checking transcription status. Please try again.');\n                clearInterval(interval);\n            }\n        }, 5000); // Check status every 5 seconds\n    };\n\n    const fetchTranscriptionText = async (transcriptUri) => {\n        try {\n            const transcriptResponse = await axios.get(transcriptUri);\n            const text = transcriptResponse.data.results.transcripts[0].transcript; \n            setEntry(text);\n        } catch (error) {\n            console.error('Error fetching transcription text:', error);\n            setErrorMessage('Error fetching transcription text. Please try again.');\n        }\n    };\n//==================================================================\n    // Fetch existing entry when date changes\n    const fetchExistingEntry = async (entryDate) => {\n        try {\n            const response = await axios.get('http://localhost:5000/api/diary/get-entry', {\n                params: { entryDate, email }\n            });\n            const { content, imageUrl } = response.data;\n            \n            // Populate the form with the existing data\n            setEntry(content || '');\n            setImage(imageUrl ? await fetchImageFromUrl(imageUrl) : null);\n            setExistingEntry(response.data); // Store the fetched entry\n        } catch (error) {\n            console.log('No entry found for this date');\n            setEntry(''); // Clear the entry field if no entry exists\n            setImage(null); // Clear the image if no entry exists\n        }\n    };\n\n    // Helper to fetch image blob from the URL\n    const fetchImageFromUrl = async (url) => {\n        const response = await fetch(url);\n        const blob = await response.blob();\n        return new File([blob], \"existingImage\", { type: blob.type });\n    };\n\n    // Call fetchExistingEntry when the date changes\n    useEffect(() => {\n        const dateString = selectedDate.toISOString().substr(0, 10); // Format the date as YYYY-MM-DD\n        fetchExistingEntry(dateString);// eslint-disable-next-line\n    }, [selectedDate]);\n\n    // Handle text area input change\n    const handleDataChange = (event) => {\n        setEntry(event.target.value); // Update entry state\n    };\n\n    // Handle date change\n    const handleDateChange = (event) => {\n        const newDate = new Date(event.target.value);\n        setSelectedDate(newDate);\n        setTextValue(newDate.toLocaleDateString(undefined, {\n            day: '2-digit',\n            month: 'short',\n            year: 'numeric'\n        }));\n    };\n    const [imageVisible, setImageVisible] = useState(false); // State for controlling image visibility\n\n    useEffect(() => {\n        // If sentimentImage is set, start a timer to hide it after 10 seconds\n        if (imageVisible) {\n            const timer = setTimeout(() => {\n                setSentimentImage(null); // Hide the sentiment image after 10 seconds\n                setImageVisible(false); // Hide the image\n            }, 10000); // 10 seconds delay\n\n            // Cleanup function to clear the timeout if the component is unmounted or image is reset earlier\n            return () => clearTimeout(timer);\n        }\n    }, [imageVisible]); // Run when imageVisible changes\n    // Handle form submission\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const entryId = `entry-${Date.now()}`; // Generate unique entry ID\n    \n        let imageUrl = null;\n        if (image) {\n            try {\n                const formData = new FormData();\n                formData.append('image', image);\n    \n                const uploadResponse = await axios.post('http://localhost:5000/api/diary/upload-image', formData, {\n                    headers: { 'Content-Type': 'multipart/form-data' }\n                });\n                imageUrl = uploadResponse.data.imageUrl;\n            } catch (error) {\n                console.error('Error uploading image:', error);\n            }\n        }\n    \n        // Store or update the diary entry (with image URL if it was uploaded)\n        try {\n            await axios.post('http://localhost:5000/api/diary/add-entry', {\n                entryId: existingEntry ? existingEntry.entryId : entryId, // Use existing entryId if updating\n                email,\n                entryDate: selectedDate.toISOString().substr(0, 10),\n                content: entry,\n                imageUrl, // Store image URL in DynamoDB\n            });\n            console.log('Diary entry added/updated successfully');\n    \n            // Check entry length and set reply and sentiment image accordingly\n            if (entry.length < 20) {\n                setReply(\"You could always say more\");\n                setSentimentImage(NEUTRALIMG); // Set neutral sentiment image\n                return; // Exit early since we don't need to fetch sentiment\n            }\n    \n            // Fetch sentiment after adding/updating the entry using the new endpoint\n            const sentimentResponse = await axios.get('http://localhost:5000/api/diary/get-sentiment-by-email-and-date', {\n                params: {\n                    entryDate: selectedDate.toISOString().substr(0, 10), // Use the same date\n                    email\n                }\n            });\n    \n            if (sentimentResponse.status === 200) {\n                const { sentiment, randomReply } = sentimentResponse.data;\n                console.log('Sentiment:', sentiment);\n                setReply(randomReply);\n                console.log(randomReply);\n                if (sentiment === 'POSITIVE') {\n                    setSentimentImage(POSITIVEIMG);\n                } else if (sentiment === 'NEGATIVE') {\n                    setSentimentImage(NEGATIVEIMG);\n                } else if (sentiment === 'MIXED') {\n                    setSentimentImage(MIXEDIMG);\n                } else {\n                    setSentimentImage(NEUTRALIMG);\n                }\n            }\n            setImageVisible(true);\n        } catch (error) {\n            console.error('Error adding/updating diary entry:', error);\n        }\n    };\n    \n    \n\n    // Handle image upload\n    const handleImageUpload = (event) => {\n        const file = event.target.files[0]; // Store only the first uploaded image file\n        if (file) {\n            setImage(file); // Update image state with the file\n        }\n    };\n\n    const triggerFileInput = () => {\n        imageInput.current.click(); // Trigger file input click when the div is clicked\n    };\n\n    return (\n        <div style={{ padding: '20px' ,paddingTop: '100px' }}>\n            <div\n                style={{\n                    width: '93%',\n                    height: '60px',\n                    display: 'flex',\n                    marginLeft: '50px',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                }}\n            >\n                <div style={{\n                            cursor: 'pointer',\n                            width: '360px',\n                            height: '50px',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            gap: '1rem',\n                            fontSize: '1.125em',\n                            fontWeight: 700,\n                            letterSpacing: '2px',\n                            color: 'black',\n                            backgroundColor: '#644dff',\n                            border: '2px solid #4836bb',\n                            borderRadius: '0.75rem',\n                            boxShadow: '0 8px 0 #4836bb',\n                            transition: 'all 0.1s ease',\n                            filter: 'drop-shadow(0 15px 20px rgba(101, 77, 255, 0.39))',\n                            marginTop: '-30px'}}\n                >\n                <label style={{color:'white', marginRight:'10px', marginTop:'5px'}}>Select Date:</label>\n                <input\n                    type=\"date\"\n                    value={selectedDate.toISOString().substr(0, 10)}\n                    onChange={handleDateChange}\n                    style={{backgroundColor:'#644dff',\n                        borderRadius:'10px',\n                        color:'white',\n                        fontWeight:'700',\n                        height:'40px',\n                        width:'150px',\n                        paddingLeft:'10px',\n                        paddingRight:'10px',\n                    }}\n                />\n                </div>\n            </div>\n            <div\n                style={{\n                    width: '803px',\n                    height: '552.5px',\n                    margin: 'auto',\n                    padding: '20px',\n                    backgroundImage: `url(${Diary})`,\n                    backgroundPosition: 'center',\n                    backgroundSize: 'cover',\n                }}\n            >\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    {/* Left Div for Uploaded Image */}\n                    <div\n                        style={{\n                            width: '44%',\n                            height: '510px',\n                            marginLeft: '50px',\n                            backgroundColor: 'transparent',\n                            padding: '10px',\n                            overflow: 'hidden',\n                            display: 'flex',         // Added to enable flexbox centering\n                            alignItems: 'center',   // Vertically center the image\n                            justifyContent: 'center' // Horizontally center the image\n                        }}\n                        onClick={triggerFileInput} // Trigger file input on click\n                    >\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            ref={imageInput}\n                            onChange={handleImageUpload}\n                            style={{ display: 'none' }} // Hide file input\n                        />\n                        {image ? (\n                            <img\n                                src={URL.createObjectURL(image)} // Generate a URL for the selected image\n                                alt=\"Uploaded\"\n                                style={{ maxWidth: '100%', maxHeight: '100%', marginBottom: '10px' }} // Show the selected image\n                            />\n                        ) : (\n                            // <p style={{ color: 'grey' }}>Click to upload image</p>\n                            <img src={imgup} alt='imgup'style={{width:'50px',height:'50px',cursor:'pointer'}}/>\n                        )}\n                    </div>\n\n                    {/* Right Div for Text Area */}\n                    <div\n                        style={{\n                            width: '47%',\n                            height: '490px',\n                            marginTop: '5px',\n                            marginRight: '5px',\n                            backgroundColor: 'transparent',\n                            padding: '10px',\n                            position:'relative'\n                        }}\n                    >\n                        <span style={{ marginRight: '10px', color: 'black' ,fontWeight:600}}>{textValue}</span>\n                        <textarea\n                            style={{\n                                height: '100%',\n                                width: '100%',\n                                padding: '10px',\n                                border: 'none',\n                                outline: 'none',\n                                resize: 'none',\n                                boxSizing: 'border-box',\n                                backgroundColor: 'transparent',\n                                fontFamily: 'Dancing Script, cursive',\n                                overflow: 'hidden',\n                            }}\n                            value={entry}\n                            onChange={handleDataChange}\n                            spellCheck=\"false\" \n                        />\n                        <img\n                            src={save}\n                            alt=\"save\"\n                            style={{\n                                boxShadow: '0 0 5px #4836bb',\n                                width: '30px',\n                                height: '30px',\n                                position: 'absolute',\n                                bottom: '0', // Position at the bottom\n                                right: '70px', // Position at the right\n                                cursor: 'pointer',\n                            }}\n                            onClick={handleSubmit} // Trigger save action on click\n                            onMouseEnter={() => setShowSubmit(true)}\n                            onMouseLeave={() => setShowSubmit(false)}\n                        />\n                        {showSubmit && (\n                            <div style={{\n                                position: 'absolute',\n                                bottom: '40px', // Adjust to position above the icon\n                                right: '0',\n                                backgroundColor: '#333',\n                                color: '#fff',\n                                padding: '5px 8px',\n                                borderRadius: '4px',\n                                fontSize: '12px',\n                                whiteSpace: 'nowrap', // Prevent text from wrapping\n                            }}>\n                                Submit\n                            </div>\n                        )}    \n                        <img\n                            src={translate}\n                            alt=\"translate\"\n                            style={{\n                                width: '35px',\n                                height: '35px',\n                                position: 'absolute',\n                                bottom: '-1px', // Position at the bottom\n                                right: '160px', // Position at the right\n                                cursor: 'pointer'\n                            }}\n                            onClick={handleTranslate}\n                            onMouseEnter={() => setShowTranslate(true)}\n                            onMouseLeave={() => setShowTranslate(false)}\n                        />\n                        {showTranslate && (\n                            <div style={{\n                                position: 'absolute',\n                                bottom: '40px', // Adjust to position above the icon\n                                right: '275px',\n                                backgroundColor: '#333',\n                                color: '#fff',\n                                padding: '5px 8px',\n                                borderRadius: '4px',\n                                fontSize: '12px',\n                                whiteSpace: 'nowrap', // Prevent text from wrapping\n                            }}>\n                                Translate\n                            </div>\n                        )} \n                        <img\n                            src={mic}\n                            alt=\"mic\"\n                            style={{\n                                width: '30px',\n                                height: '30px',\n                                position: 'absolute',\n                                bottom: '0', // Position at the bottom\n                                right: '250px', // Position at the right\n                                cursor: 'pointer',\n                                backgroundColor: recording ? 'red' : 'transparent',\n                                borderRadius:'10px'\n                            }}\n                            onClick={handleToggleRecording}\n                            onMouseEnter={() => setShowMic(true)}\n                            onMouseLeave={() => setShowMic(false)}\n                        />\n                        {recording && (\n                        <div style={{ fontSize: '24px', fontWeight: 'bold' ,width: '30px',\n                                height: '30px',\n                                position: 'absolute',\n                                bottom: '15px', // Position at the bottom\n                                right: '270px',}}>\n                            {formatTime(timer)}\n                        </div>)}\n                        {/* Tooltip for Submit text */}\n                        {showMic && (\n                            <div style={{\n                                position: 'absolute',\n                                bottom: '40px', // Adjust to position above the icon\n                                right: '275px',\n                                backgroundColor: '#333',\n                                color: '#fff',\n                                padding: '5px 8px',\n                                borderRadius: '4px',\n                                fontSize: '12px',\n                                whiteSpace: 'nowrap', // Prevent text from wrapping\n                            }}>\n                                {recording ? 'Stop Recording' : 'Start Recording'}\n                            </div>\n                        )}                     \n                    </div>\n                </div>\n            </div>\n            {/* Sentiment Image Display */}\n            {sentimentImage && imageVisible && (\n                <div style={{\n                    position: 'fixed', // Change to fixed\n                    bottom: '0px', // Distance from the bottom\n                    left: '0px', // Distance from the left\n                    zIndex: 100, // Ensure it's above other components\n                }}>\n                    <img\n                        src={sentimentImage}\n                        alt=\"Sentiment\"\n                        style={{ width: '100%', height: '100%', objectFit: 'cover' }} // Adjust size as needed\n                    />\n                </div>\n            )}\n            {sentimentImage && imageVisible && (\n            <div style={{\n                position: 'fixed',\n                bottom: '10px', // Distance from the bottom\n                left: '200px', // Distance from the left\n                zIndex: 101, // Ensure it's above other components\n            }}>\n                <div\n                    style={{\n                        width: '200px', // Adjust width as needed\n                        height: '100px', // Adjust height as needed\n                        padding: '10px', // Padding for text area\n                        borderRadius: '5px', // Rounded corners\n                        border: '1px solid #ccc', // Border style\n                        backgroundColor: 'rgba(255, 255, 255, 0.8)', // Slightly transparent background\n                        fontSize: '16px', // Font size\n                        overflowY: 'auto', // Allow scrolling if content overflows\n                    }}\n                >\n                    {reply} {/* Display the reply; nothing shown if empty or null */}\n                </div>\n            </div>\n            )}\n            \n        </div>\n    );\n};\n\nexport default AddData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
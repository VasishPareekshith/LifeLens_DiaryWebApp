{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASISH1211\\\\Desktop\\\\LifeLens\\\\frontend\\\\src\\\\components\\\\ViewData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Diary from \"../assets/opendiary2.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewData = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(new Date()); // Initialize with current date\n  const [textValue, setTextValue] = useState(''); // State to hold text data from the database\n  const [imageUrl, setImageUrl] = useState(''); // State to hold the image URL from the database\n  const email = localStorage.getItem('email'); // Assuming email is stored in localStorage\n\n  // Function to handle date change\n  const handleDateChange = event => {\n    const newDate = new Date(event.target.value);\n    setSelectedDate(newDate.toISOString().substr(0, 10));\n\n    // Fetch data from the database based on the selected date and email\n    fetchDataByDateAndEmail(newDate.toISOString().substr(0, 10), email);\n  };\n\n  // Fetch data from the backend when the date changes\n  const fetchDataByDateAndEmail = async (date, email) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/diary/get-entry`, {\n        params: {\n          date,\n          email\n        } // Send both date and email as query parameters\n      });\n\n      // Assuming the response data contains 'content' and 'imageUrl'\n      const {\n        content,\n        imageUrl\n      } = response.data;\n      setTextValue(content || 'No content available for this date'); // If no content is found, show a default message\n      setImageUrl(imageUrl || ''); // If no image is found, clear the image URL\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      setTextValue('Error fetching data'); // Error handling\n      setImageUrl(''); // Clear the image URL on error\n    }\n  };\n\n  // Automatically fetch the data for the current date when the component mounts\n  useEffect(() => {\n    fetchDataByDateAndEmail(selectedDate.toISOString().substr(0, 10), email);\n  }, [email, selectedDate]);\n  console.log(selectedDate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '93%',\n        height: '60px',\n        display: 'flex',\n        marginLeft: '50px',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Select a Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate.toISOString().substr(0, 10),\n        onChange: handleDateChange,\n        style: {\n          padding: '5px',\n          borderRadius: '5px',\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '803px',\n        height: '552.5px',\n        margin: 'auto',\n        padding: '20px',\n        backgroundImage: `url(${Diary})`,\n        backgroundPosition: 'center',\n        backgroundSize: 'cover'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '44%',\n            height: '510px',\n            marginLeft: '50px',\n            backgroundColor: 'transparent',\n            padding: '10px',\n            overflowY: 'auto' // Enable scrolling if content overflows\n          },\n          children: imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: \"Diary entry\",\n            style: {\n              width: '100%',\n              marginBottom: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No image available for this date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '47%',\n            height: '500px',\n            marginTop: '5px',\n            marginRight: '5px',\n            backgroundColor: 'transparent',\n            padding: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            style: {\n              height: '102%',\n              width: '100%',\n              padding: '10px',\n              border: 'none',\n              outline: 'none',\n              resize: 'none',\n              boxSizing: 'border-box',\n              backgroundColor: 'transparent'\n            },\n            value: textValue,\n            readOnly: true // Make the text area read-only\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(ViewData, \"mXqbLjnOHFb029jhETBdhiBUZGo=\");\n_c = ViewData;\nexport default ViewData;\nvar _c;\n$RefreshReg$(_c, \"ViewData\");","map":{"version":3,"names":["React","useState","useEffect","axios","Diary","jsxDEV","_jsxDEV","ViewData","_s","selectedDate","setSelectedDate","Date","textValue","setTextValue","imageUrl","setImageUrl","email","localStorage","getItem","handleDateChange","event","newDate","target","value","toISOString","substr","fetchDataByDateAndEmail","date","response","get","params","content","data","error","console","log","style","padding","children","width","height","display","marginLeft","justifyContent","alignItems","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","borderRadius","border","margin","backgroundImage","backgroundPosition","backgroundSize","backgroundColor","overflowY","src","alt","marginBottom","marginTop","outline","resize","boxSizing","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/VASISH1211/Desktop/LifeLens/frontend/src/components/ViewData.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Diary from \"../assets/opendiary2.png\";\r\n\r\nconst ViewData = () => {\r\n    const [selectedDate, setSelectedDate] = useState(new Date()); // Initialize with current date\r\n    const [textValue, setTextValue] = useState(''); // State to hold text data from the database\r\n    const [imageUrl, setImageUrl] = useState(''); // State to hold the image URL from the database\r\n    const email = localStorage.getItem('email'); // Assuming email is stored in localStorage\r\n\r\n    // Function to handle date change\r\n    const handleDateChange = (event) => {\r\n        const newDate = new Date(event.target.value);\r\n        setSelectedDate(newDate.toISOString().substr(0, 10));\r\n\r\n        // Fetch data from the database based on the selected date and email\r\n        fetchDataByDateAndEmail(newDate.toISOString().substr(0, 10), email);\r\n    };\r\n\r\n    // Fetch data from the backend when the date changes\r\n    const fetchDataByDateAndEmail = async (date, email) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/diary/get-entry`, {\r\n                params: { date, email }  // Send both date and email as query parameters\r\n            });\r\n\r\n            // Assuming the response data contains 'content' and 'imageUrl'\r\n            const { content, imageUrl } = response.data;\r\n            \r\n            setTextValue(content || 'No content available for this date'); // If no content is found, show a default message\r\n            setImageUrl(imageUrl || ''); // If no image is found, clear the image URL\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n            setTextValue('Error fetching data'); // Error handling\r\n            setImageUrl(''); // Clear the image URL on error\r\n        }\r\n    };\r\n\r\n    // Automatically fetch the data for the current date when the component mounts\r\n    useEffect(() => {\r\n        fetchDataByDateAndEmail(selectedDate.toISOString().substr(0, 10), email);\r\n    }, [email, selectedDate]);\r\n    console.log(selectedDate);\r\n\r\n    return (\r\n        <div style={{ padding: '20px' }}>\r\n            <div\r\n                style={{\r\n                    width: '93%',\r\n                    height: '60px',\r\n                    display: 'flex',\r\n                    marginLeft: '50px',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <label style={{ marginRight: '10px' }}>Select a Date:</label>\r\n                <input\r\n                    type=\"date\"\r\n                    value={selectedDate.toISOString().substr(0, 10)}\r\n                    onChange={handleDateChange}\r\n                    style={{ padding: '5px', borderRadius: '5px', border: '1px solid #ccc' }}\r\n                />\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    width: '803px',\r\n                    height: '552.5px',\r\n                    margin: 'auto',\r\n                    padding: '20px',\r\n                    backgroundImage: `url(${Diary})`,\r\n                    backgroundPosition: 'center',\r\n                    backgroundSize: 'cover',\r\n                }}\r\n            >\r\n                {/* Container for Left and Right Divs */}\r\n                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                    {/* Left Div for Image */}\r\n                    <div\r\n                        style={{\r\n                            width: '44%',\r\n                            height: '510px',\r\n                            marginLeft: '50px',\r\n                            backgroundColor: 'transparent',\r\n                            padding: '10px',\r\n                            overflowY: 'auto', // Enable scrolling if content overflows\r\n                        }}\r\n                    >\r\n                        {/* Show the image fetched from the database */}\r\n                        {imageUrl ? (\r\n                            <img src={imageUrl} alt=\"Diary entry\" style={{ width: '100%', marginBottom: '10px' }} />\r\n                        ) : (\r\n                            <p>No image available for this date</p>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* Right Div for Text Area */}\r\n                    <div\r\n                        style={{\r\n                            width: '47%',\r\n                            height: '500px',\r\n                            marginTop: '5px',\r\n                            marginRight: '5px',\r\n                            backgroundColor: 'transparent',\r\n                            padding: '10px',\r\n                        }}\r\n                    >\r\n                        {/* Display the text data fetched from the database */}\r\n                        <textarea\r\n                            style={{\r\n                                height: '102%',\r\n                                width: '100%',\r\n                                padding: '10px',\r\n                                border: 'none',\r\n                                outline: 'none',\r\n                                resize: 'none',\r\n                                boxSizing: 'border-box',\r\n                                backgroundColor: 'transparent',\r\n                            }}\r\n                            value={textValue}\r\n                            readOnly  // Make the text area read-only\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
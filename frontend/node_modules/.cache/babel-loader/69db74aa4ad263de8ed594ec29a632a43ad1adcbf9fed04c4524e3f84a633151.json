{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASISH1211\\\\Desktop\\\\LifeLens\\\\frontend\\\\src\\\\components\\\\CalendarView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./CalendarView.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarView = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [eventName, setEventName] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const Date_Click_Fun = date => {\n    setSelectedDate(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Your Timeline \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-container\",\n        style: 'border:20px',\n        children: [/*#__PURE__*/_jsxDEV(Calendar, {\n          value: selectedDate,\n          onClickDay: Date_Click_Fun,\n          tileClassName: ({\n            date\n          }) => selectedDate && date.toDateString() === selectedDate.toDateString() ? \"selected\" : events.some(event => event.date.toDateString() === date.toDateString()) ? \"event-marked\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(CalendarView, \"d3GnH8vSGKaj668TwXi5EW0hUwk=\");\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","CalendarView","_s","selectedDate","setSelectedDate","eventName","setEventName","events","setEvents","Date_Click_Fun","date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","value","onClickDay","tileClassName","toDateString","some","event","_c","$RefreshReg$"],"sources":["C:/Users/VASISH1211/Desktop/LifeLens/frontend/src/components/CalendarView.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./CalendarView.css\";\r\n\r\nconst CalendarView = () => {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n    const [eventName, setEventName] = useState(\"\");\r\n    const [events, setEvents] = useState([]);\r\n\r\n    const Date_Click_Fun = (date) => {\r\n        setSelectedDate(date);\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <h1> Your Timeline </h1>\r\n            <div className=\"container\">\r\n                <div className=\"calendar-container\" style={'border:20px'}>\r\n                    <Calendar \r\n                        value={selectedDate}\r\n                        onClickDay={Date_Click_Fun}\r\n                        tileClassName={({ date }) =>\r\n                            selectedDate &&\r\n                            date.toDateString() === selectedDate.toDateString()\r\n                                ? \"selected\"\r\n                                : events.some(\r\n                                      (event) =>\r\n                                          event.date.toDateString() ===\r\n                                          date.toDateString(),\r\n                                  )\r\n                                ? \"event-marked\"\r\n                                : \"\"\r\n                        }\r\n                    />{\" \"}\r\n                </div>\r\n            </div>{\" \"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalendarView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AACzC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,cAAc,GAAIC,IAAI,IAAK;IAC7BN,eAAe,CAACM,IAAI,CAAC;EACzB,CAAC;EAED,oBACIV,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBZ,OAAA;MAAAY,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBhB,OAAA;MAAKW,SAAS,EAAC,WAAW;MAAAC,QAAA,eACtBZ,OAAA;QAAKW,SAAS,EAAC,oBAAoB;QAACM,KAAK,EAAE,aAAc;QAAAL,QAAA,gBACrDZ,OAAA,CAACF,QAAQ;UACLoB,KAAK,EAAEf,YAAa;UACpBgB,UAAU,EAAEV,cAAe;UAC3BW,aAAa,EAAEA,CAAC;YAAEV;UAAK,CAAC,KACpBP,YAAY,IACZO,IAAI,CAACW,YAAY,CAAC,CAAC,KAAKlB,YAAY,CAACkB,YAAY,CAAC,CAAC,GAC7C,UAAU,GACVd,MAAM,CAACe,IAAI,CACNC,KAAK,IACFA,KAAK,CAACb,IAAI,CAACW,YAAY,CAAC,CAAC,KACzBX,IAAI,CAACW,YAAY,CAAC,CAC1B,CAAC,GACD,cAAc,GACd;QACT;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,EAAC,GAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAAC,GAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAACd,EAAA,CAlCID,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
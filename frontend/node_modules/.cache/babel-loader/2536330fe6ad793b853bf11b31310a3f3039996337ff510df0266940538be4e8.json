{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASISH1211\\\\Desktop\\\\PROJ\\\\LifeLens\\\\frontend\\\\src\\\\components\\\\Cards.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewData = () => {\n  _s();\n  const [entries, setEntries] = useState([]); // State to hold fetched entries\n  const [loading, setLoading] = useState(false); // State to handle loading\n\n  // Fetch all entries for a specific month\n  const fetchEntriesByMonth = async (year, month) => {\n    setLoading(true);\n    const email = localStorage.getItem(\"email\");\n    try {\n      const response = await axios.get(`http://localhost:5000/api/diary/get-entries-by-month`, {\n        params: {\n          email,\n          year,\n          month\n        }\n      });\n      setEntries(response.data); // Set the entries in the state\n    } catch (error) {\n      console.error(\"Error fetching entries by month:\", error);\n    }\n    setLoading(false);\n  };\n  useEffect(() => {\n    const year = \"2024\"; // Specify the year\n    const month = \"09\"; // Specify the month (09 = September)\n    fetchEntriesByMonth(year, month);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"90%\",\n      margin: \"0 auto\",\n      paddingTop: \"20px\"\n    },\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        margin: \"20px 0\"\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\"\n      },\n      children: entries.map(entry => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ddd\",\n          borderRadius: \"10px\",\n          width: \"200px\",\n          margin: \"10px\",\n          textAlign: \"center\",\n          boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n        },\n        children: [entry.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: entry.imageUrl,\n          alt: `Diary entry for ${entry.entryDate}`,\n          style: {\n            width: \"100%\",\n            borderTopLeftRadius: \"10px\",\n            borderTopRightRadius: \"10px\",\n            padding: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"20px\",\n            color: \"#888\"\n          },\n          children: [\"No image available for \", entry.entryDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            style: {\n              margin: \"10px 0\",\n              fontSize: \"1.1em\"\n            },\n            children: entry.entryDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)]\n      }, entry.entryId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewData, \"4sTGUpvOCVQDVrjMhiZXOD4pK8w=\");\n_c = ViewData;\nexport default ViewData;\nvar _c;\n$RefreshReg$(_c, \"ViewData\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ViewData","_s","entries","setEntries","loading","setLoading","fetchEntriesByMonth","year","month","email","localStorage","getItem","response","get","params","data","error","console","style","width","margin","paddingTop","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","justifyContent","map","entry","border","borderRadius","boxShadow","imageUrl","src","alt","entryDate","borderTopLeftRadius","borderTopRightRadius","padding","color","fontSize","entryId","_c","$RefreshReg$"],"sources":["C:/Users/VASISH1211/Desktop/PROJ/LifeLens/frontend/src/components/Cards.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ViewData = () => {\r\n  const [entries, setEntries] = useState([]); // State to hold fetched entries\r\n  const [loading, setLoading] = useState(false); // State to handle loading\r\n\r\n  // Fetch all entries for a specific month\r\n  const fetchEntriesByMonth = async (year, month) => {\r\n    setLoading(true);\r\n    const email = localStorage.getItem(\"email\");\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/diary/get-entries-by-month`, {\r\n        params: { email, year, month },\r\n      });\r\n      setEntries(response.data); // Set the entries in the state\r\n    } catch (error) {\r\n      console.error(\"Error fetching entries by month:\", error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const year = \"2024\"; // Specify the year\r\n    const month = \"09\"; // Specify the month (09 = September)\r\n    fetchEntriesByMonth(year, month);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: \"90%\", margin: \"0 auto\", paddingTop: \"20px\" }}>\r\n      {loading ? (\r\n        <div style={{ textAlign: \"center\", margin: \"20px 0\" }}>Loading...</div>\r\n      ) : (\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\r\n          {entries.map((entry) => (\r\n            <div\r\n              key={entry.entryId}\r\n              style={{\r\n                border: \"1px solid #ddd\",\r\n                borderRadius: \"10px\",\r\n                width: \"200px\",\r\n                margin: \"10px\",\r\n                textAlign: \"center\",\r\n                boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n              }}\r\n            >\r\n              {entry.imageUrl ? (\r\n                <img\r\n                  src={entry.imageUrl}\r\n                  alt={`Diary entry for ${entry.entryDate}`}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    borderTopLeftRadius: \"10px\",\r\n                    borderTopRightRadius: \"10px\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <div style={{ padding: \"20px\", color: \"#888\" }}>\r\n                  No image available for {entry.entryDate}\r\n                </div>\r\n              )}\r\n              <div style={{ padding: \"10px\" }}>\r\n                <h5 style={{ margin: \"10px 0\", fontSize: \"1.1em\" }}>{entry.entryDate}</h5>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VASISH1211\\\\Desktop\\\\PROJ\\\\LifeLens\\\\frontend\\\\src\\\\components\\\\Cards.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import InfiniteScroll from \"react-infinite-scroller\";\n\n// const ViewData = () => {\n//   const [pokemon, setPokemon] = useState([]);\n//   const [url, setUrl] = useState(\"https://pokeapi.co/api/v2/pokemon/?limit=200\");\n\n//   const loadPokemon = () => {\n//     axios\n//       .get(url)\n//       .then(res => {\n//         setPokemon(prevPokemon => [...prevPokemon, ...res.data.results]);\n//         setUrl(res.data.next);\n//       })\n//       .catch(error => {\n//         console.log(error);\n//       });\n//   };\n\n//   return (\n//     <div style={{ width: \"90%\", margin: \"0 auto\", paddingTop: \"20px\" }}>\n//       <InfiniteScroll\n//         pageStart={0}\n//         loadMore={loadPokemon}\n//         hasMore={!!url}\n//         loader={\n//           <div style={{ textAlign: \"center\", margin: \"20px 0\" }} key={0}>\n//             Loading ...\n//           </div>\n//         }\n//       >\n//         <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\n//           {pokemon.map((poke, i) => (\n//             <div\n//               key={poke.name + i}\n//               style={{\n//                 border: \"1px solid #ddd\",\n//                 borderRadius: \"10px\",\n//                 width: \"200px\",\n//                 margin: \"10px\",\n//                 textAlign: \"center\",\n//                 boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n//               }}\n//             >\n//               <img\n//                 src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i + 1}.png`}\n//                 alt={poke.name}\n//                 style={{\n//                   width: \"100%\",\n//                   borderTopLeftRadius: \"10px\",\n//                   borderTopRightRadius: \"10px\",\n//                   backgroundColor: \"#f9f9f9\",\n//                   padding: \"10px\"\n//                 }}\n//               />\n//               <div style={{ padding: \"10px\" }}>\n//                 <h5 style={{ margin: \"10px 0\", fontSize: \"1.1em\" }}>{poke.name}</h5>\n//                 <a\n//                   href={poke.url}\n//                   target=\"_blank\"\n//                   rel=\"noopener noreferrer\"\n//                   style={{\n//                     color: \"#007bff\",\n//                     textDecoration: \"none\",\n//                     fontSize: \"0.9em\"\n//                   }}\n//                 >\n//                   More details\n//                 </a>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       </InfiniteScroll>\n//     </div>\n//   );\n// };\n\n// export default ViewData;\n\nimport React, { useState, useEffect } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewData = () => {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [dateList, setDateList] = useState([]); // List of consecutive dates\n\n  // Generate consecutive dates starting from today\n  useEffect(() => {\n    const today = new Date();\n    const dates = Array.from({\n      length: 10\n    }, (_, i) => {\n      const date = new Date(today);\n      date.setDate(today.getDate() - i);\n      return date.toISOString().substr(0, 10);\n    });\n    setDateList(dates);\n  }, []);\n\n  // Function to fetch data by date and email\n  const fetchDataByDateAndEmail = async (entryDate, email) => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/diary/get-entry`, {\n        params: {\n          entryDate,\n          email\n        }\n      });\n      return {\n        date: entryDate,\n        imageUrl: response.data.imageUrl || null\n      };\n    } catch (error) {\n      console.error(`Error fetching data for ${entryDate}:`, error);\n      return {\n        date: entryDate,\n        imageUrl: null\n      };\n    }\n  };\n\n  // Load data for each date in dateList\n  const loadEntries = async () => {\n    const email = localStorage.getItem(\"email\");\n    const fetchedEntries = await Promise.all(dateList.map(date => fetchDataByDateAndEmail(date, email)));\n    setEntries(prevEntries => [...prevEntries, ...fetchedEntries]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"90%\",\n      margin: \"0 auto\",\n      paddingTop: \"20px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      pageStart: 0,\n      loadMore: loadEntries,\n      hasMore: true,\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          margin: \"20px 0\"\n        },\n        children: \"Loading ...\"\n      }, 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          justifyContent: \"center\"\n        },\n        children: entries.map((entry, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ddd\",\n            borderRadius: \"10px\",\n            width: \"200px\",\n            margin: \"10px\",\n            textAlign: \"center\",\n            boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n          },\n          children: [entry.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: entry.imageUrl,\n            alt: `Diary entry for ${entry.date}`,\n            style: {\n              width: \"100%\",\n              borderTopLeftRadius: \"10px\",\n              borderTopRightRadius: \"10px\",\n              padding: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"20px\",\n              color: \"#888\"\n            },\n            children: \"No image available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: \"10px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              style: {\n                margin: \"10px 0\",\n                fontSize: \"1.1em\"\n              },\n              children: entry.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, entry.date + i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewData, \"67hsopvziEC5yvmVy4U7bGbTzfI=\");\n_c = ViewData;\nexport default ViewData;\nvar _c;\n$RefreshReg$(_c, \"ViewData\");","map":{"version":3,"names":["React","useState","useEffect","InfiniteScroll","axios","jsxDEV","_jsxDEV","ViewData","_s","entries","setEntries","dateList","setDateList","today","Date","dates","Array","from","length","_","i","date","setDate","getDate","toISOString","substr","fetchDataByDateAndEmail","entryDate","email","response","get","params","imageUrl","data","error","console","loadEntries","localStorage","getItem","fetchedEntries","Promise","all","map","prevEntries","style","width","margin","paddingTop","children","pageStart","loadMore","hasMore","loader","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","justifyContent","entry","border","borderRadius","boxShadow","src","alt","borderTopLeftRadius","borderTopRightRadius","padding","color","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/VASISH1211/Desktop/PROJ/LifeLens/frontend/src/components/Cards.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import InfiniteScroll from \"react-infinite-scroller\";\r\n\r\n// const ViewData = () => {\r\n//   const [pokemon, setPokemon] = useState([]);\r\n//   const [url, setUrl] = useState(\"https://pokeapi.co/api/v2/pokemon/?limit=200\");\r\n\r\n//   const loadPokemon = () => {\r\n//     axios\r\n//       .get(url)\r\n//       .then(res => {\r\n//         setPokemon(prevPokemon => [...prevPokemon, ...res.data.results]);\r\n//         setUrl(res.data.next);\r\n//       })\r\n//       .catch(error => {\r\n//         console.log(error);\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ width: \"90%\", margin: \"0 auto\", paddingTop: \"20px\" }}>\r\n//       <InfiniteScroll\r\n//         pageStart={0}\r\n//         loadMore={loadPokemon}\r\n//         hasMore={!!url}\r\n//         loader={\r\n//           <div style={{ textAlign: \"center\", margin: \"20px 0\" }} key={0}>\r\n//             Loading ...\r\n//           </div>\r\n//         }\r\n//       >\r\n//         <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\r\n//           {pokemon.map((poke, i) => (\r\n//             <div\r\n//               key={poke.name + i}\r\n//               style={{\r\n//                 border: \"1px solid #ddd\",\r\n//                 borderRadius: \"10px\",\r\n//                 width: \"200px\",\r\n//                 margin: \"10px\",\r\n//                 textAlign: \"center\",\r\n//                 boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\r\n//               }}\r\n//             >\r\n//               <img\r\n//                 src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${i + 1}.png`}\r\n//                 alt={poke.name}\r\n//                 style={{\r\n//                   width: \"100%\",\r\n//                   borderTopLeftRadius: \"10px\",\r\n//                   borderTopRightRadius: \"10px\",\r\n//                   backgroundColor: \"#f9f9f9\",\r\n//                   padding: \"10px\"\r\n//                 }}\r\n//               />\r\n//               <div style={{ padding: \"10px\" }}>\r\n//                 <h5 style={{ margin: \"10px 0\", fontSize: \"1.1em\" }}>{poke.name}</h5>\r\n//                 <a\r\n//                   href={poke.url}\r\n//                   target=\"_blank\"\r\n//                   rel=\"noopener noreferrer\"\r\n//                   style={{\r\n//                     color: \"#007bff\",\r\n//                     textDecoration: \"none\",\r\n//                     fontSize: \"0.9em\"\r\n//                   }}\r\n//                 >\r\n//                   More details\r\n//                 </a>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       </InfiniteScroll>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ViewData;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport axios from \"axios\";\r\n\r\nconst ViewData = () => {\r\n  const [entries, setEntries] = useState([]);\r\n  const [dateList, setDateList] = useState([]); // List of consecutive dates\r\n\r\n  // Generate consecutive dates starting from today\r\n  useEffect(() => {\r\n    const today = new Date();\r\n    const dates = Array.from({ length: 10 }, (_, i) => {\r\n      const date = new Date(today);\r\n      date.setDate(today.getDate() - i);\r\n      return date.toISOString().substr(0, 10);\r\n    });\r\n    setDateList(dates);\r\n  }, []);\r\n\r\n  // Function to fetch data by date and email\r\n  const fetchDataByDateAndEmail = async (entryDate, email) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:5000/api/diary/get-entry`, {\r\n        params: { entryDate, email },\r\n      });\r\n      return {\r\n        date: entryDate,\r\n        imageUrl: response.data.imageUrl || null,\r\n      };\r\n    } catch (error) {\r\n      console.error(`Error fetching data for ${entryDate}:`, error);\r\n      return { date: entryDate, imageUrl: null };\r\n    }\r\n  };\r\n\r\n  // Load data for each date in dateList\r\n  const loadEntries = async () => {\r\n    const email = localStorage.getItem(\"email\");\r\n    const fetchedEntries = await Promise.all(\r\n      dateList.map((date) => fetchDataByDateAndEmail(date, email))\r\n    );\r\n    setEntries((prevEntries) => [...prevEntries, ...fetchedEntries]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"90%\", margin: \"0 auto\", paddingTop: \"20px\" }}>\r\n      <InfiniteScroll\r\n        pageStart={0}\r\n        loadMore={loadEntries}\r\n        hasMore={true}\r\n        loader={\r\n          <div style={{ textAlign: \"center\", margin: \"20px 0\" }} key={0}>\r\n            Loading ...\r\n          </div>\r\n        }\r\n      >\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}>\r\n          {entries.map((entry, i) => (\r\n            <div\r\n              key={entry.date + i}\r\n              style={{\r\n                border: \"1px solid #ddd\",\r\n                borderRadius: \"10px\",\r\n                width: \"200px\",\r\n                margin: \"10px\",\r\n                textAlign: \"center\",\r\n                boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n              }}\r\n            >\r\n              {entry.imageUrl ? (\r\n                <img\r\n                  src={entry.imageUrl}\r\n                  alt={`Diary entry for ${entry.date}`}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    borderTopLeftRadius: \"10px\",\r\n                    borderTopRightRadius: \"10px\",\r\n                    padding: \"10px\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <div style={{ padding: \"20px\", color: \"#888\" }}>No image available</div>\r\n              )}\r\n              <div style={{ padding: \"10px\" }}>\r\n                <h5 style={{ margin: \"10px 0\", fontSize: \"1.1em\" }}>{entry.date}</h5>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}